<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<sqlMap namespace="Mercurius.Repositories.Core.File" xmlns="http://ibatis.apache.org/mapping">
  <alias>
    <typeAlias alias="File" type="Mercurius.Core.Interfaces.Entities.File, Mercurius.Core.Interfaces" />
    <typeAlias alias="FileSO" type="Mercurius.Core.Interfaces.Entities.SO.FileSO, Mercurius.Core.Interfaces" />
    <typeAlias alias="BusinessFile" type="Mercurius.Core.Interfaces.Entities.BusinessFile, Mercurius.Core.Interfaces" />
  </alias>

  <resultMaps>
    <resultMap id="GetBusinessFiles" class="BusinessFile">
      <result property="Id" column="Id" />
      <result property="Category" column="Category" />
      <result property="SerialNumber" column="SerialNumber" />
      <result property="Source" column="Source" />
      <result property="FileId" column="FileId" />
      <result property="Description" column="Description" />
      <result property="Sort" column="Sort" />
      <result property="UploadUserId" column="UploadUserId" />
      <result property="UploadDateTime" column="UploadDateTime" />
      <result property="File" column="FileId" select="Mercurius.Sparrow.Repositories.Storage.File.GetById" />
    </resultMap>
  </resultMaps>
  <statements>

    <!-- 根据文件编号获取文件信息 -->
    <select id="GetById" parameterClass="Guid" resultClass="File">
      <![CDATA[
        SELECT
          [Id]
          ,[Name]
          ,[Size]
          ,[MD5]
          ,[ContentType]
          ,[SavedPath]
          ,[SavedDateTime]
        FROM [Storage].[File]
        WHERE [Id]=#value#
      ]]>
    </select>

    <!-- 获取已存在的文件保存路径 -->
    <select id="CheckFileExists" parameterClass="string" resultClass="string">
      <![CDATA[
        SELECT TOP 1 SavedPath FROM [Storage].[File] WHERE MD5=#value#
      ]]>
    </select>

    <!-- 添加或者修改上传文件信息 -->
    <update id="CreateOrUpdate" parameterClass="File">
      <![CDATA[
        IF EXISTS(SELECT * FROM [Storage].[File] WHERE [SavedPath]=#SavedPath#)
          UPDATE [Storage].[File]
          SET
            [Name]=#Name#,
            [Size]=#Size#,
            [ContentType]=#ContentType#,
            [SavedPath]=#SavedPath#,
            [SavedDateTime]=GETDATE()
          WHERE [SavedFilePath]=#SavedPath#;
        ELSE
          INSERT INTO [Storage].[File]
          (
            [Id],
            [Name],
            [Size],
            [MD5],
            [ContentType],
            [SavedPath],
            [SavedDateTime]
          )
          VALUES
          (
            NEWID(),
            #Name#,
            #Size#,
            #MD5#,
            #ContentType#,
            #SavedPath#,
            GETDATE()
          )
      ]]>
    </update>

    <!-- 上传文件信息。 -->
    <select id="UploadFiles" parameterClass="Params" resultClass="string">
      <![CDATA[
        BEGIN
          DECLARE @sort INT=1;
          DECLARE @fileId UNIQUEIDENTIFIER;
          DECLARE @businessFileId UNIQUEIDENTIFIER;
      ]]>
      <isNotNull property="Files">
        <iterate property="Files" open="" conjunction="" close="">
          <![CDATA[
            SET @fileId=NULL;
            SET @businessFileId=NULL;

            SELECT @businessFileId=Id FROM Storage.BusinessFile WHERE Id=#Files[].Id#;

            IF @businessFileId IS NULL
            BEGIN
              SELECT @fileId=Id FROM Storage.[File] WHERE MD5=#Files[].File.MD5#;

              IF @fileId IS NULL
              BEGIN
                SET @fileId = NEWID();

                INSERT INTO Storage.[File]
                (
                  Id,Name,Size,MD5,ContentType,SavedPath,SavedDateTime
                )
                VALUES  
                ( 
                  @fileId,#Files[].File.Name#,#Files[].File.Size#,
                  #Files[].File.MD5#,#Files[].File.ContentType#,
                  #Files[].File.SavedPath#,GETDATE()
                );
              END

              INSERT INTO Storage.BusinessFile
              ( 
                Id,FileId,Category,SerialNumber,Description,
                Source,Sort,UploadUserId,UploadDateTime
              )
              VALUES
              ( 
                NEWID(),@fileId,#Category#,#SerialNumber#,
                #Files[].Description#,#Files[].Source#,
                @sort, #Files[].UploadUserId#,GETDATE()
              );
            END
            ELSE
            BEGIN
              IF #Files[].File.SavedPath# IS NULL
                UPDATE Storage.BusinessFile
                SET 
                  Description=#Files[].Description#,
                  Sort=@sort
                WHERE Id=@businessFileId;
              ELSE
              BEGIN
                SELECT @fileId=Id FROM Storage.[File] WHERE MD5=#Files[].File.MD5#;
      
                IF @fileId IS NULL
                BEGIN
                  SET @fileId = NEWID();

                  INSERT INTO Storage.[File]
                  (
                    Id,Name,Size,MD5,ContentType,SavedPath,SavedDateTime
                  )
                  VALUES  
                  ( 
                    @fileId,#Files[].File.Name#,#Files[].File.Size#,
                    #Files[].File.MD5#,#Files[].File.ContentType#,
                    #Files[].File.SavedPath#,GETDATE()
                  );
                END

                UPDATE Storage.BusinessFile
                SET 
                  FileId=@fileId,
                  Description=#Files[].Description#,
                  Sort=@sort
                WHERE Id=@businessFileId;
              END
            END

            SET @sort=@sort+1;
          ]]>
        </iterate>
      </isNotNull>
      <isEqual property="IsBeforeBusinessData" compareValue="true">
        <![CDATA[
            SELECT
              a.SavedPath
            FROM [Storage].[File] a
            WHERE a.Id=@fileId;
          END
        ]]>
      </isEqual>
      <isEqual property="IsBeforeBusinessData" compareValue="false">
        <![CDATA[
            SELECT
              a.SavedPath
            FROM [Storage].[File] a
            INNER JOIN [Storage].[BusinessFile] b ON a.[Id]=b.[FileId]
            WHERE b.[Category]=#Category# AND b.[SerialNumber]=#SerialNumber#;
          END
        ]]>
      </isEqual>
    </select>

    <!-- 删除上传文件信息。 -->
    <delete id="Remove" parameterClass="Params">
      <![CDATA[
        DELETE FROM Storage.BusinessFile 
        WHERE Category=#Category# AND SerialNumber=#SerialNumber#
      ]]>
    </delete>

    <!-- 根据文件保存路径获取文件信息 -->
    <select id="GetFileByPath" parameterClass="string" resultClass="File">
      <![CDATA[
        SELECT TOP 1 
          [Id] AS Id,
          [Name] AS Name,
          [Size] AS Size,
          [MD5] AS MD5,
          [ContentType] AS ContentType,
          [SavedPath] AS SavedPath,
          [SavedDateTime] AS SavedDateTime
        FROM [Storage].[File]
        WHERE [SavedPath]=#value#
      ]]>
    </select>

    <!-- 获取业务所用文件信息 -->
    <select id="GetBusinessFiles" parameterClass="Params" resultMap="GetBusinessFiles">
      <![CDATA[
        SELECT
          [Id] AS Id
          ,[Category] AS Category
          ,[SerialNumber] AS SerialNumber
          ,[Source] AS Source
          ,[FileId] AS FileId
          ,[Description] AS Description
          ,[Sort] AS Sort
          ,[UploadUserId] AS UploadUserId
          ,[UploadDateTime] AS UploadDateTime
        FROM [Storage].[BusinessFile]
        WHERE Category=#Category# AND SerialNumber=#SerialNumber#
      ]]>
      <dynamic>
        <isEqual property="IncludeFromRichEditor" compareValue="false" prepend="AND">
          <![CDATA[
            [Source]=1
          ]]>
        </isEqual>
      </dynamic>
      <![CDATA[
        ORDER BY Sort ASC
      ]]>
    </select>

    <!-- 分页返回满足查询条件的上传文件信息。 -->
    <select id="SearchFiles" parameterClass="FileSO" resultClass="File">
      <![CDATA[
        WITH CTE AS(
          SELECT
            [Id] AS Id,
            [Name] AS Name,
            [Size] AS Size,
            [MD5] AS MD5,
            [ContentType] AS ContentType,
            [SavedPath] AS SavedPath,
            [SavedDateTime] AS SavedDateTime,
            ROW_NUMBER() OVER(ORDER BY a.[Id] DESC) AS RowIndex
          FROM [Storage].[File] a
      ]]>
      <include refid="searchConditions" />
      <![CDATA[
        )
        SELECT * FROM CTE
        WHERE RowIndex BETWEEN (#PageIndex#-1)*#PageSize#+1 AND #PageIndex#*#PageSize#
        ORDER BY RowIndex ASC
      ]]>
    </select>

    <!-- 返回满足查询条件的记录数。 -->
    <select id="SearchFilesCount" parameterClass="FileSO" resultClass="int">
      <![CDATA[
        SELECT
          COUNT(*) 
        FROM [Storage].[File] a
      ]]>
      <include refid="searchConditions" />
    </select>

    <!-- 查询条件。 -->
    <sql id="searchConditions">
      <dynamic prepend="WHERE">
        <isNotNull property=".">
          <isNotEmpty property="FileName" prepend="AND">
            Name LIKE '%'+#FileName#+'%'
          </isNotEmpty>
          <isNotEmpty property="ContentType" prepend="AND">
            ContentType LIKE '%'+#ContentType#+'%'
          </isNotEmpty>
          <isNotNull property="StartUploadDate" prepend="AND">
            SavedDateTime>=#StartUploadDate#
          </isNotNull>
          <isNotNull property="EndUploadDate" prepend="AND">
            <![CDATA[
              CONVERT(NVARCHAR(10), SavedDateTime, 120)<=#EndUploadDate#
            ]]>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <!-- 获取无效的文件列表 -->
    <procedure id="GetInvalidFiles" resultClass="string">
      <![CDATA[
        Storage.GetInvalidFiles
      ]]>
    </procedure>

    <!-- 获取未管理的文件列表 -->
    <select id="GetUnmanagedFiles" parameterClass="string" resultClass="string">
      <![CDATA[
        SELECT
          b.Item
        FROM [Storage].[File] a
        RIGHT JOIN Split(#value#, ',') b ON a.SavedPath=b.Item
        WHERE a.Id IS NULL AND b.Item<>'';
      ]]>
    </select>
  </statements>
</sqlMap>