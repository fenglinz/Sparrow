<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<sqlMap namespace="Mercurius.Repositories.News.NewsComment" xmlns="http://ibatis.apache.org/mapping">
  <alias>
    <typeAlias alias="NewsComment" type="Mercurius.News.Interfaces.Entities.NewsComment, Mercurius.News.Interfaces" />
    <typeAlias alias="NewsCommentSO" type="Mercurius.News.Interfaces.Entities.SO.NewsCommentSO, Mercurius.News.Interfaces" />
  </alias>
  <statements>

    <!-- 添加或者更新新闻评论信息。 -->
    <update id="CreateOrUpdate" parameterClass="NewsComment">
      <![CDATA[
        IF EXISTS(SELECT * FROM [NewsComment] WHERE [Id]=#Id#)
          UPDATE [NewsComment]
          SET
            [NewsId]=#NewsId#,
            [ReplyCommentId]=#ReplyCommentId#,
            [Content]=#Content#,
            [Status]=#Status#,
            [LikePoints]=#LikePoints#
          WHERE [Id]=#Id#
        ELSE
          INSERT INTO [NewsComment]
          (
            [Id],
            [NewsId],
            [ReplyCommentId],
            [Content],
            [Status],
            [LikePoints],
            [CommentUserId],
            [CommentDateTime]
          )
          VALUES
          (
            NEWID(),
            #NewsId#,
            #ReplyCommentId#,
            #Content#,
            #Status#,
            #LikePoints#,
            #CommentUserId#,
            GETDATE()
          )
      ]]>
    </update>

    <!-- 删除新闻评论信息。 -->
    <delete id="Remove" parameterClass="Guid">
      <![CDATA[
        DELETE FROM [NewsComment] WHERE [Id]=#value#
      ]]>
    </delete>

    <!-- 根据主键获取新闻评论信息。 -->
    <select id="GetById" parameterClass="Guid" resultClass="NewsComment">
      <![CDATA[
        SELECT TOP 1 
          [Id] AS Id,
          [NewsId] AS NewsId,
          [ReplyCommentId] AS ReplyCommentId,
          [Content] AS Content,
          [Status] AS Status,
          [LikePoints] AS LikePoints,
          [CommentUserId] AS CommentUserId,
          [CommentDateTime] AS CommentDateTime
        FROM [NewsComment]
        WHERE [Id]=#value#
      ]]>
    </select>

    <!-- 分页返回满足查询条件的新闻评论信息。 -->
    <select id="SearchNewscommenies" parameterClass="NewsCommentSO" resultClass="NewsComment">
      <![CDATA[
        WITH CTE AS(
          SELECT
            [Id] AS Id,
            [NewsId] AS NewsId,
            [ReplyCommentId] AS ReplyCommentId,
            [Content] AS Content,
            [Status] AS Status,
            [LikePoints] AS LikePoints,
            [CommentUserId] AS CommentUserId,
            [CommentDateTime] AS CommentDateTime,
            ROW_NUMBER() OVER(ORDER BY [Id] DESC) AS RowIndex
          FROM [NewsComment]
      ]]>
      <include refid="searchConditions" />
      <![CDATA[
        )
        SELECT * FROM CTE
        WHERE RowIndex BETWEEN (#PageIndex#-1)*#PageSize#+1 AND #PageIndex#*#PageSize#
        ORDER BY RowIndex ASC
      ]]>
    </select>

    <!-- 返回满足查询条件的记录数。 -->
    <select id="SearchNewscommeniesCount" parameterClass="NewsCommentSO" resultClass="int">
      <![CDATA[
        SELECT COUNT(*) FROM [NewsComment]
      ]]>
      <include refid="searchConditions" />
    </select>

    <!-- 查询条件。 -->
    <sql id="searchConditions">
      <dynamic prepend="WHERE">
        <isNotNull property=".">
          <isNotNull property="NewsId">
            [NewsId]=#NewsId#
          </isNotNull>
          <isNotNull property="ReplyCommentId" prepend="AND">
            [ReplyCommentId]=#ReplyCommentId#
          </isNotNull>
          <isNotNull property="Status" prepend="AND">
            [Status]=#Status#
          </isNotNull>
          <isNotNull property="CommentUserId" prepend="AND">
            [CommentUserId]=#CommentUserId#
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>
  </statements>
</sqlMap>