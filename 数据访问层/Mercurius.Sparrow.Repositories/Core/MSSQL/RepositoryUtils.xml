<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mercurius.Sparrow.Repositories.Core.RepositoryUtils" xmlns="http://ibatis.apache.org/mapping">
  <alias>
    <typeAlias alias="Table" type="Mercurius.Infrastructure.Ado.Table, Mercurius.Infrastructure"/>
    <typeAlias alias="Partition" type="Mercurius.Sparrow.Entities.Core.Partition, Mercurius.Sparrow.Entities" />
  </alias>

  <resultMaps>
    <resultMap id="GetPartitionsRM" class="Partition">
      <result property="Name" column="PARTITION_NAME" />
      <result property="HightValue" column="HIGH_VALUE" dbType="RAW" type="string" />
    </resultMap>
  </resultMaps>

  <statements>
    <!-- 获取用户自定义架构 -->
    <select id="GetSchemas" resultClass="string">
      <![CDATA[
        SELECT
          name
        FROM sys.schemas
        WHERE principal_id IN(
          SELECT uid FROM Sysusers where issqluser='1' AND hasdbaccess=1 AND islogin=1
        )
        ORDER BY SCHEMA_ID ASC
      ]]>
    </select>
    
    <!-- 获取所有表信息 -->
    <select id="GetTables" resultClass="Table">
      <![CDATA[
        WITH cte AS(
          SELECT
            SCHEMA_NAME(schema_id) AS [Schema],
            type,
            name,
            object_id
          FROM sys.objects
          WHERE type IN('U','V') AND Name<>'sysdiagrams'
        )
        SELECT
          cte.[Schema],
          cte.Name,
          p.HasIdentityColumn,
          CASE cte.type WHEN 'U' THEN 0 ELSE 1 END IsView,
          CASE WHEN a.value IS NULL THEN cte.name ELSE a.value END Comments
        FROM cte
        LEFT JOIN sys.extended_properties a
          ON cte.object_id=a.major_id AND a.minor_id=0
        OUTER APPLY(
          SELECT 1 AS HasIdentityColumn FROM syscolumns s WHERE s.id=cte.object_id AND COLUMNPROPERTY(s.id, s.name, 'IsIdentity')=1
        ) p
        ORDER BY cte.[schema],cte.Name
      ]]>
    </select>
    
    <!-- 获取所有自定义表的DDL语句。 -->
    <select id="GetTablesDefinition" resultClass="string">
      <![CDATA[
        BEGIN
          DECLARE @isView INT;
          DECLARE @table NVARCHAR(50);
          DECLARE @schema NVARCHAR(50);
          DECLARE @tableDescription SQL_VARIANT;

          DECLARE @name NVARCHAR(50);
          DECLARE @dataType NVARCHAR(50);
          DECLARE @dataLength INT;
          DECLARE @isPrimaryKey INT;
          DECLARE @isNullable INT;
          DECLARE @isIdentity INT;
          DECLARE @dataDefault NVARCHAR(50);
          DECLARE @description SQL_VARIANT;

          DECLARE @index INT;
          DECLARE @ddl TABLE(id INT, source NVARCHAR(max));

          DECLARE cur_tables CURSOR FOR
            WITH cte AS(
              SELECT
                SCHEMA_NAME(schema_id) AS [Schema],
                  type,
                  name,
                  object_id
              FROM sys.objects
              WHERE type IN('U','V') AND Name<>'sysdiagrams'
              )
              SELECT
                cte.[Schema],
                cte.Name,
                CASE cte.type WHEN 'U' THEN 0 ELSE 1 END IsView,
                CASE WHEN a.value IS NULL THEN cte.name ELSE a.value END Comments
              FROM cte
              LEFT JOIN sys.extended_properties a ON cte.object_id=a.major_id AND a.minor_id=0
            ORDER BY cte.[schema],cte.Name;

          SET @index = 0;
          OPEN cur_tables;
          FETCH NEXT FROM cur_tables INTO @schema, @table, @isView, @tableDescription;

          WHILE @@FETCH_STATUS=0
          BEGIN
            DECLARE @sql NVARCHAR(max);
            DECLARE @columnDescription NVARCHAR(max);

            DECLARE cur_columns CURSOR FOR
              SELECT
                a.name AS Name
                ,UPPER(b.name) AS DataType
                ,COLUMNPROPERTY(a.id, a.name, 'PRECISION') AS DataLength
                ,CASE WHEN EXISTS(
                  SELECT 1 FROM sysobjects
                  WHERE xtype= 'PK' and name in ( 
                    SELECT
                      name
                    FROM sysindexes
                    WHERE indid in(
                      SELECT
                        indid
                      FROM sysindexkeys
                      WHERE id = a.id AND colid=a.colid
                    )
                  )
                ) THEN 1 ELSE 0 END AS IsPrimaryKey
                ,a.IsNullable AS IsNullable
                ,COLUMNPROPERTY(a.id, a.name, 'IsIdentity') AS IsIdentity
                ,ISNULL(e.text, '') AS DataDefault
                ,CASE
                  WHEN g.[value] IS NULL THEN a.Name
                  ELSE g.[value]
                END AS Description
              FROM syscolumns a
              LEFT JOIN systypes b 
                ON a.xusertype=b.xusertype
              INNER JOIN sys.objects d 
                ON a.id=d.object_id AND (d.type='U' OR d.type='V') AND d.name<>'dtproperties'
              INNER JOIN sys.schemas s
                ON d.schema_id=s.schema_id
              LEFT JOIN syscomments e 
                ON a.cdefault=e.id
              LEFT JOIN sys.extended_properties g 
                ON a.id=g.major_id AND a.colid=g.minor_id
              WHERE s.name=@schema AND d.name=@table
              ORDER BY a.id, a.colorder;

            SET @index += 1;

            OPEN cur_columns;
            FETCH NEXT FROM cur_columns INTO @name, @dataType, @dataLength, @isPrimaryKey, @isNullable, @isIdentity, @dataDefault, @description;

            SET @columnDescription='';
            SET @sql = 'Create Table ['+@schema+'].['+@table+']('+CHAR(10);

            WHILE @@FETCH_STATUS=0
            BEGIN
              SET @sql+= '  [' + @name + '] '+@dataType;

              IF @dataType in('char', 'nchar', 'varchar', 'nvarchar')
                SET @sql+=' ('+ CASE @dataLength WHEN -1 THEN 'MAX' ELSE CAST(@dataLength AS NVARCHAR(50)) END+')';

              IF @isIdentity=1 SET @sql+=' IDENTITY';

              IF @isPrimaryKey=1 SET @sql+=' Primary Key';
              ELSE
              BEGIN
                IF @isNullable=1 SET @sql+=' NULL';
                ELSE SET @sql+=' NOT NULL';
              END

              SET @sql+=','+CHAR(10);

              IF @description IS NOT NULL
              BEGIN
                SET @columnDescription+='EXEC sys.sp_addextendedproperty ''MS_Description'', '''+ CONVERT(NVARCHAR(250), @description) + ''' ,''SCHEMA'', '''+@schema+''', ''TABLE'', '''+@table+''', ''COLUMN'', '''+@name+''';'+CHAR(10)+'GO'+CHAR(10);
              END

              FETCH NEXT FROM cur_columns INTO @name, @dataType, @dataLength, @isPrimaryKey, @isNullable, @isIdentity, @dataDefault, @description;
            END
            CLOSE cur_columns;
            DEALLOCATE cur_columns;

            SET @sql=SUBSTRING(@sql, 0, len(@sql)-1)+CHAR(10)+');'+CHAR(10)+'GO'+CHAR(10);
            SET @sql+='EXEC sys.sp_addextendedproperty ''MS_Description'', '''+ convert(nvarchar(250), @tableDescription) + ''', ''SCHEMA'', '''+@schema+''', ''TABLE'', '''+@table+''', NULL, NULL;'+CHAR(10)+'GO'+CHAR(10);

            INSERT INTO @ddl VALUES(@index,@sql+@columnDescription);

            SET @table=NULL;
            SET @schema=NULL;
            SET @tableDescription=NULL;

            FETCH NEXT FROM cur_tables INTO @schema, @table, @isView, @tableDescription;
          END

          CLOSE cur_tables;
          DEALLOCATE cur_tables;

          SELECT source FROM @ddl ORDER BY id ASC;
        END
      ]]>
    </select>
    
    <!-- 获取表的添加数据脚本 -->
    <select id="GetAddDatasScript" parameterClass="string" resultClass="string">
      <![CDATA[
        BEGIN
          DECLARE @table NVARCHAR(200);
          DECLARE @sqlstr VARCHAR(MAX);
          DECLARE @sqlstr1 VARCHAR(MAX);
          DECLARE @sqlstr2 VARCHAR(MAX);

          SET @table = #value#;
          SET @sqlstr = 'select ''INSERT INTO ' + @table;
          SET @sqlstr1 = '';
          SET @sqlstr2 = ' (';
          SET @sqlstr1 = ' VALUES (''+';

          SELECT
            @sqlstr1 = @sqlstr1 + col + '+'', ''+',
            @sqlstr2 = @sqlstr2 + '[' + name + '], '
          FROM
          (
            SELECT
              CASE
                WHEN a.xtype=104 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + 'CONVERT(VARCHAR(1),[' + a.name + '])' + ' END'
                WHEN a.xtype=175 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + '''''''''+' + 'REPLACE([' + a.name + '],'''''''','''''''''''')' + '+''''''''' + ' END'
                WHEN a.xtype=61 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + '''''''''+' + 'CONVERT(VARCHAR(23),[' + a.name + '],121)' + '+''''''''' + ' END'
                WHEN a.xtype=106 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + 'CONVERT(VARCHAR(' + CONVERT(VARCHAR(4), a.xprec + 2) + '),[' + a.name + '])' + ' END'
                WHEN a.xtype=62 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + 'CONVERT(VARCHAR(23),[' + a.name + '],2)' + ' END'
                WHEN a.xtype=56 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + 'CONVERT(VARCHAR(11),[' + a.name + '])' + ' END'
                WHEN a.xtype=60 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + 'CONVERT(VARCHAR(22),[' + a.name + '])' + ' END'
                WHEN a.xtype=239 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + '''''''''+' + 'REPLACE([' + a.name + '],'''''''','''''''''''')' + '+''''''''' + ' END'
                WHEN a.xtype=108 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + 'CONVERT(VARCHAR(' + CONVERT(VARCHAR(4), a.xprec + 2) + '),[' + a.name + '])' + ' END'
                WHEN a.xtype=231 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + '''''''''+' + 'REPLACE([' + a.name + '],'''''''','''''''''''')' + '+''''''''' + ' END'
                WHEN a.xtype=59 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + 'CONVERT(VARCHAR(23),[' + a.name + '],2)' + ' END'
                WHEN a.xtype=58 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + '''''''''+' + 'CONVERT(VARCHAR(23),[' + a.name + '],121)' + '+''''''''' + ' END'
                WHEN a.xtype=52 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + 'CONVERT(VARCHAR(12),[' + a.name + '])' + ' END'
                WHEN a.xtype=122 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + 'CONVERT(VARCHAR(22),[' + a.name + '])' + ' END'
                WHEN a.xtype=48 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + 'CONVERT(VARCHAR(6),[' + a.name + '])' + ' END'
                WHEN a.xtype=167 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + '''''''''+' + 'REPLACE([' + a.name + '],'''''''','''''''''''')' + '+''''''''' + ' END'
                WHEN a.xtype=36 THEN 'CASE WHEN [' + a.name + '] IS NULL THEN ''NULL'' ELSE ' + '''''''''+' + 'CONVERT(VARCHAR(36),[' + a.name + '])'+ '+''''''''' + ' END'
                ELSE '''NULL'''
              END AS col,
              a.colid,
              a.name
            FROM syscolumns a
            WHERE a.id=OBJECT_ID(@table) AND a.xtype<>189 AND a.xtype<>34 AND a.xtype<>35
          ) t ORDER BY colid;

          SET @sqlstr = @sqlstr + LEFT(@sqlstr2, LEN(@sqlstr2) - 1) + ') ' + LEFT(@sqlstr1, LEN(@sqlstr1) - 4) + ')'' FROM ' + @table;

          EXEC( @sqlstr);
        END
      ]]>
    </select>
    
    <!-- 获取数据库中的所有用户自定义过程(包括函数) -->
    <select id="GetProcedures" resultClass="string">
      <![CDATA[
        SELECT
          '['+s.name+'].['+t.name+']' AS FullTable
        FROM sys.objects t
        INNER JOIN sys.schemas s ON t.schema_id=s.schema_id 
        WHERE t.type IN('P','TF','FN');
      ]]>
    </select>

    <!-- 获取数据库中自定义过程(包括函数)的详细定义 -->
    <select id="GetProcedureDefinition" parameterClass="string" resultClass="string">
      <![CDATA[
        exec sp_helptext #value#
      ]]>
    </select>

  </statements>
</sqlMap>