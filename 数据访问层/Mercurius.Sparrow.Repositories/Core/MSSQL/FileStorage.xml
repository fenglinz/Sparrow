<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<sqlMap namespace="Mercurius.Sparrow.Repositories.Core.FileStorage" xmlns="http://ibatis.apache.org/mapping">
  <alias>
    <typeAlias alias="FileStorage" type="Mercurius.Sparrow.Entities.Core.FileStorage,Mercurius.Sparrow.Entities" />
    <typeAlias alias="FileStorageSO" type="Mercurius.Sparrow.Entities.Core.SO.FileStorageSO,Mercurius.Sparrow.Entities" />
  </alias>
  <statements>
    <!-- 添加或者更新上传文件信息。 -->
    <update id="CreateOrUpdate" parameterClass="Params">
      <isNotNull property="UploadItems">
        <iterate property="UploadItems" open="BEGIN " conjunction="" close="END">
          <![CDATA[
            IF EXISTS(SELECT * FROM [FileStorage] WHERE [SaveAsPath]=#UploadItems[].SaveAsPath#)
              UPDATE [FileStorage]
              SET
                [BusinessCategory]=#UploadItems[].BusinessCategory#,
                [BusinessSerialNumber]=#UploadItems[].BusinessSerialNumber#,
                [FileName]=ISNULL(CASE #UploadItems[].FileName# WHEN '' THEN NULL ELSE #UploadItems[].FileName# END, [FileName]),
                [ContentType]=ISNULL(CASE #UploadItems[].ContentType# WHEN '' THEN NULL ELSE #UploadItems[].ContentType# END, [ContentType]),
                [FileSize]=ISNULL(CASE #UploadItems[].FileSize# WHEN '' THEN NULL ELSE #UploadItems[].FileSize# END, [FileSize]),
                [Description]=#UploadItems[].Description#,
                [UploadUserId]=#UploadUserId#,
                [UploadDateTime]=GETDATE()
              WHERE [SaveAsPath]=#UploadItems[].SaveAsPath#
            ELSE
              INSERT INTO [FileStorage]
              (
                [BusinessCategory],
                [BusinessSerialNumber],
                [FileName],
                [ContentType],
                [FileSize],
                [Description],
                [SaveAsPath],
                [UploadUserId],
                [UploadDateTime]
              )
              VALUES
              (
                #UploadItems[].BusinessCategory#,
                #UploadItems[].BusinessSerialNumber#,
                #UploadItems[].FileName#,
                #UploadItems[].ContentType#,
                #UploadItems[].FileSize#,
                #UploadItems[].Description#,
                #UploadItems[].SaveAsPath#,
                #UploadUserId#,
                GETDATE()
              )
          ]]>
        </iterate>
      </isNotNull>
    </update>

    <!-- 修改描述信息 -->
    <update id="UpdateDescription" parameterClass="FileStorage">
      <![CDATA[
        UPDATE [FileStorage]
        SET
          [Description]=#Description#,
          [UploadUserId]=#UploadUserId#,
          [UploadDateTime]=GETDATE()
        WHERE [SaveAsPath]=#SaveAsPath#
      ]]>
    </update>
    
    <!-- 删除上传文件信息。 -->
    <delete id="Remove" parameterClass="int">
      <![CDATA[
        DELETE FROM [FileStorage] WHERE [Id]=#value#
      ]]>
    </delete>

    <!-- 删除上传文件信息 -->
    <delete id="RemovesByAccount" parameterClass="Params">
      <isNotNull property="FilePaths">
        <![CDATA[
          DELETE FROM [FileStorage] WHERE SaveAsPath IN
        ]]>
        <iterate property="FilePaths" open="(" conjunction="," close=")">
          #FilePaths[]#
        </iterate>
      </isNotNull>
    </delete>
    
    <!-- 根据主键获取上传文件信息。 -->
    <select id="GetById" parameterClass="int" resultClass="FileStorage">
      <![CDATA[
        SELECT TOP 1 
          [Id] AS Id,
          [FileName] AS FileName,
          [ContentType] AS ContentType,
          [FileSize] AS FileSize,
          [Description] AS Description,
          [SaveAsPath] AS SaveAsPath,
          [UploadUserId] AS UploadUserId,
          [UploadDateTime] AS UploadDateTime
        FROM [FileStorage]
        WHERE [Id]=#value#
      ]]>
    </select>

    <!-- 根据文件保存路径获取文件信息 -->
    <select id="GetFileStorageByPath" parameterClass="string" resultClass="FileStorage">
      <![CDATA[
        SELECT TOP 1 
          [Id] AS Id,
          [FileName] AS FileName,
          [ContentType] AS ContentType,
          [FileSize] AS FileSize,
          [Description] AS Description,
          [SaveAsPath] AS SaveAsPath,
          [UploadUserId] AS UploadUserId,
          [UploadDateTime] AS UploadDateTime
        FROM [FileStorage]
        WHERE [SaveAsPath]=#value#
      ]]>
    </select>

    <!-- 分页返回满足查询条件的上传文件信息。 -->
    <select id="SearchFileStorages" parameterClass="FileStorageSO" resultClass="FileStorage">
      <![CDATA[
        WITH CTE AS(
          SELECT
            a.[Id] AS Id,
            [FileName] AS FileName,
            [ContentType] AS ContentType,
            [FileSize] AS FileSize,
            a.[Description] AS Description,
            [SaveAsPath] AS SaveAsPath,
            [UploadUserId] AS UploadUserId,
            CASE WHEN b.[Name] IS NULL THEN c.[Description] ELSE b.[Name] END AS UploadUserName,
            [UploadDateTime] AS UploadDateTime,
            ROW_NUMBER() OVER(ORDER BY a.[Id] DESC) AS RowIndex
          FROM [FileStorage] a
          LEFT JOIN [RBAC].[User] b ON a.UploadUserId=b.Id
          LEFT JOIN [WebApi].[User] c ON a.UploadUserId=c.Id
      ]]>
      <include refid="searchConditions" />
      <![CDATA[
        )
        SELECT * FROM CTE
        WHERE RowIndex BETWEEN (#PageIndex#-1)*#PageSize#+1 AND #PageIndex#*#PageSize#
        ORDER BY RowIndex ASC
      ]]>
    </select>

    <!-- 返回满足查询条件的记录数。 -->
    <select id="SearchFileStoragesCount" parameterClass="FileStorageSO" resultClass="int">
      <![CDATA[
        SELECT
          COUNT(*) 
        FROM [FileStorage] a
        LEFT JOIN [RBAC].[User] b
          ON a.UploadUserId=b.Id
      ]]>
      <include refid="searchConditions" />
    </select>

    <!-- 查询条件。 -->
    <sql id="searchConditions">
      <dynamic prepend="WHERE">
        <isNotNull property=".">
          <isNotEmpty property="FileName" prepend="AND">
            FileName LIKE '%'+#FileName#+'%'
          </isNotEmpty>
          <isNotEmpty property="ContentType" prepend="AND">
            ContentType LIKE '%'+#ContentType#+'%'
          </isNotEmpty>
          <isNotEmpty property="UploadUserName" prepend="AND">
            b.[Name] LIKE '%'+#UploadUserName#+'%'
          </isNotEmpty>
          <isNotNull property="StartUploadDate" prepend="AND">
            UploadDateTime>=#StartUploadDate#
          </isNotNull>
          <isNotNull property="EndUploadDate" prepend="AND">
            <![CDATA[
              CONVERT(NVARCHAR(10), UploadDateTime, 120)<=#EndUploadDate#
            ]]>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>
  </statements>
</sqlMap>