<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mercurius.Sparrow.Repositories.RBAC.Permission" xmlns="http://ibatis.apache.org/mapping">
  <alias>
    <typeAlias alias="SystemMenu" type="Mercurius.Sparrow.Entities.RBAC.SystemMenu, Mercurius.Sparrow.Entities" />
  </alias>

  <resultMaps>
    <resultMap id="SystemMenu" class="SystemMenu">
      <result property="Id" column="Id" />
      <result property="Name" column="Name" />
      <result property="Title" column="Title" />
      <result property="Image" column="Image" />
      <result property="Category" column="Category" />
      <result property="Target" column="Target" />
      <result property="ParentId" column="ParentId" />
      <result property="NavigateUrl" column="NavigateUrl" />
      <result property="CreateUserName" column="CreateUserName" />
      <result property="CreateDateTime" column="CreateDateTime" />
      <result property="ModifyUserName" column="ModifyUserName" />
      <result property="ModifyDateTime" column="ModifyDateTime" />
      <result property="Status" column="Status" />
      <result property="Sort" column="Sort" />
    </resultMap>

    <resultMap id="SystemMenuWithAlloted" class="SystemMenu" extends="SystemMenu">
      <result property="FullSort" column="FullSort" />
      <result property="CanAccess" column="CanAccess" />
    </resultMap>

    <resultMap id="AccessibleMenu" class="SystemMenu">
      <result property="Id" column="Id" />
      <result property="Name" column="Name" />
      <result property="Title" column="Title" />
      <result property="Image" column="Image" />
      <result property="Target" column="Target" />
      <result property="ParentId" column="ParentId" />
      <result property="NavigateUrl" column="NavigateUrl" />
      <result property="Sort" column="Sort" />
    </resultMap>
  </resultMaps>

  <statements>

    <!-- 获取系统菜单 -->
    <select id="GetSystemMenus" parameterClass="string" resultMap="SystemMenu">
      <![CDATA[
        WITH RECURSIVE cte AS(
          SELECT
            "Id"
            ,"Name"
            ,"Title"
            ,"Image"
            ,"Category"
            ,"Target"
            ,"ParentId"
            ,CAST("Sort" AS CHARACTER VARYING) AS "FullSort"
            ,"NavigateUrl"
            ,"CreateUserId"
            ,"CreateDateTime"
            ,"ModifyUserId"
            ,"ModifyDateTime"
            ,"Status"
            ,"Sort"
          FROM "RBAC"."SystemMenu" a
          WHERE "ParentId"='0' AND "Status"=1 AND "Category"!=3
          UNION ALL
          SELECT 
            a."Id"
            ,a."Name"
            ,a."Title"
            ,a."Image"
            ,a."Category"
            ,a."Target"
            ,a."ParentId"
            ,cte."FullSort" || '-' || CAST(a."Sort" AS CHARACTER VARYING) AS "FullSort"
            ,a."NavigateUrl"
            ,a."CreateUserId"
            ,a."CreateDateTime"
            ,a."ModifyUserId"
            ,a."ModifyDateTime"
            ,a."Status"
            ,a."Sort"
          FROM "RBAC"."SystemMenu" a
          INNER JOIN cte 
            ON a."ParentId"=cte."Id"
        )
        SELECT
          cte."Id"
          ,cte."Name"
          ,b."Title"
          ,CASE WHEN cte."Category"=3 THEN b."Image" ELSE cte."Image" END "Image"
          ,cte."Category"
          ,cte."Target"
          ,cte."ParentId"
          ,cte."FullSort"
          ,CASE WHEN cte."Category"=3 THEN b."Code" ELSE cte."NavigateUrl" END "NavigateUrl"
          ,u1."Name" AS "CreateUserName"
          ,cte."CreateDateTime"
          ,u2."Name" AS "ModifyUserName"
          ,cte."ModifyDateTime"
          ,cte."Status"
          ,cte."Sort"
        FROM cte
        LEFT JOIN "RBAC"."Button" b
          ON cte."Name"=b."Name"
        LEFT JOIN "RBAC"."User" u1
          ON cte."CreateUserId"=u1."Id"
        LEFT JOIN "RBAC"."User" u2
          ON cte."ModifyUserId"=u2."Id"
        WHERE cte."Status"=1
      ]]>
    </select>

    <!-- 获取菜单的按钮 -->
    <select id="GetSystemMenuButtons" parameterClass="string" resultMap="SystemMenu">
      <![CDATA[
        SELECT
	        a."Id",
	        a."Name",
	        b."Title",
	        b."Image",
	        a."Category",
	        a."Target",
	        a."ParentId",
	        CAST (a."Category" AS CHARACTER VARYING) || '-' || CAST (a."Sort" AS CHARACTER VARYING) AS "FullSort",
	        b."Code" AS "NavigateUrl",
	        u1."Name" AS "CreateUserName",
	        a."CreateDateTime",
	        u2."Name" AS "ModifyUserName",
	        a."ModifyDateTime",
          a."Status",
          a."Sort"
        FROM "RBAC"."SystemMenu" a
        LEFT JOIN "RBAC"."Button" b
          ON a."Name"=b."Name"
        LEFT JOIN "RBAC"."User" u1
          ON a."CreateUserId"=u1."Id"
        LEFT JOIN "RBAC"."User" u2
          ON a."ModifyUserId"=u2."Id"
        WHERE "ParentId"=#value# AND a."Category"=3 AND a."Status"=1
        ORDER BY a."Sort" ASC
      ]]>
    </select>

    <!-- 获取新增按钮菜单的排序号 -->
    <select id="NewSystemMenuButtonSort" parameterClass="string" resultClass="int">
      <![CDATA[
        SELECT 
          CASE
            WHEN MAX("Sort") IS NULL THEN 1
            ELSE MAX("Sort")+1 
          END
        FROM "RBAC"."SystemMenu"
        WHERE "ParentId"=#value# AND "Category"=3 AND "Status"=1
      ]]>
    </select>

    <!-- 检查菜单相关联的按钮是否已经添加 -->
    <select id="CheckSystemButtonExists" parameterClass="Params" resultClass="int">
      <![CDATA[
        SELECT 
          1
        WHERE EXISTS (
          SELECT * FROM "RBAC"."SystemMenu"
          WHERE "ParentId"=#ParentId# AND "Name"=#ButtonName# AND "Category"=3 AND "Status"=1
        )
      ]]>
    </select>

    <!-- 根据用户编号获取标有访问权限的菜单列表 -->
    <select id="GetSystemMenusWithAlloted" parameterClass="string" resultMap="SystemMenuWithAlloted">
      <![CDATA[
        WITH RECURSIVE cte AS(
          SELECT
            "Id"
            ,"Name"
            ,"Title"
            ,"Image"
            ,"Category"
            ,"Target"
            ,"ParentId"
            ,CAST("Sort" AS VARCHAR) AS "FullSort"
            ,"NavigateUrl"
            ,"CreateUserId"
            ,"CreateDateTime"
            ,"ModifyUserId"
            ,"ModifyDateTime"
            ,"Status"
            ,"Sort"
          FROM "RBAC"."SystemMenu" a
          WHERE "ParentId"='0' AND "Status"=1 AND "Category"!=3
          UNION ALL
          SELECT 
            a."Id"
            ,a."Name"
            ,a."Title"
            ,a."Image"
            ,a."Category"
            ,a."Target"
            ,a."ParentId"
            ,cte."FullSort" || '-' || CAST(a."Sort" AS VARCHAR) AS "FullSort"
            ,a."NavigateUrl"
            ,a."CreateUserId"
            ,a."CreateDateTime"
            ,a."ModifyUserId"
            ,a."ModifyDateTime"
            ,a."Status"
            ,a."Sort"
          FROM "RBAC"."SystemMenu" a
          INNER JOIN cte ON a."ParentId"=cte."Id"
        ),
        canAccess as(
          SELECT 
            DISTINCT(M."Id")
          FROM 
          (
            SELECT
              M."Id"
            FROM "RBAC"."SystemMenu" M
            LEFT JOIN "RBAC"."RolePermission" R_R
              ON R_R."SystemMenuId"=M."Id"
            LEFT JOIN "RBAC"."UserRole" U_R
              ON U_R."RoleId"=R_R."RoleId"
            WHERE U_R."UserId"=#value#
            UNION ALL
            SELECT 
              M."Id"
            FROM "RBAC"."SystemMenu" M
            LEFT JOIN "RBAC"."UserGroupPermission" U_R
              ON U_R."SystemMenuId"=M."Id"
            LEFT JOIN "RBAC"."UserGroupRelation" U_G 
              ON U_G."UserGroupId"=U_R."UserGroupId"
            WHERE U_G."UserId"=#value#
            UNION ALL
            SELECT 
              M."Id"
            FROM "RBAC"."SystemMenu" M
            LEFT JOIN  "RBAC"."UserPermission" U_R 
              ON U_R."SystemMenuId"=M."Id"
            WHERE U_R."UserId"=#value#
          ) M
        )
        SELECT
          cte.*,
          u1."Name" AS "CreateUserName",
          u2."Name" AS "ModifyUserName",
          CASE WHEN canAccess."Id" IS NULL THEN 0 ELSE 1 END AS "CanAccess"
        FROM cte
        LEFT JOIN canAccess
          ON cte."Id"=canAccess."Id"
        LEFT JOIN "RBAC"."User" u1
          ON cte."CreateUserId"=u1."Id"
        LEFT JOIN "RBAC"."User" u2
          ON cte."ModifyUserId"=u2."Id"
        WHERE cte."Status"=1
      ]]>
    </select>

    <!-- 获取标有用户拥有访问权限的菜单列表 -->
    <select id="GetSystemMenusWithAllotedByUser" parameterClass="string" resultMap="SystemMenuWithAlloted">
      <![CDATA[
        WITH RECURSIVE cte AS(
          SELECT
            "Id"
            ,"Name"
            ,"Title"
            ,"Image"
            ,"Category"
            ,"Target"
            ,"ParentId"
            ,CAST("Sort" AS CHARACTER VARYING) AS "FullSort"
            ,"NavigateUrl"
            ,"CreateUserId"
            ,"CreateDateTime"
            ,"ModifyUserId"
            ,"ModifyDateTime"
            ,"Status"
            ,"Sort"
          FROM "RBAC"."SystemMenu" a
          WHERE "ParentId"='0' AND "Status"=1 AND "Category"!=3
          UNION ALL
          SELECT 
            a."Id"
            ,a."Name"
            ,a."Title"
            ,a."Image"
            ,a."Category"
            ,a."Target"
            ,a."ParentId"
            ,cte."FullSort" || '-' || CAST(a."Sort" as CHARACTER VARYING) AS "FullSort"
            ,a."NavigateUrl"
            ,a."CreateUserId"
            ,a."CreateDateTime"
            ,a."ModifyUserId"
            ,a."ModifyDateTime"
            ,a."Status"
            ,a."Sort"
          FROM "RBAC"."SystemMenu" a
          INNER JOIN cte ON a."ParentId"=cte."Id"
        ),
        canAccess as(
          SELECT
            Distinct M."Id"
          FROM "RBAC"."SystemMenu" M
          LEFT JOIN "RBAC"."UserPermission" U_P 
            ON U_P."SystemMenuId" = M."Id"
          WHERE U_P."UserId"=#value#
        )
        SELECT
          cte.*,
          u1."Name" AS "CreateUserName",
          u2."Name" AS "ModifyUserName",
          CASE WHEN canAccess."Id" IS NULL THEN 0 ELSE 1 END AS "CanAccess"
        FROM cte
        LEFT JOIN canAccess
          ON cte."Id"=canAccess."Id"
        LEFT JOIN "RBAC"."User" u1
          ON cte."CreateUserId"=u1."Id"
        LEFT JOIN "RBAC"."User" u2
          ON cte."ModifyUserId"=u2."Id"
        WHERE cte."Status"=1
      ]]>
    </select>

    <!-- 获取标有角色拥有访问权限的菜单列表 -->
    <select id="GetSystemMenusWithAllotedByRole" parameterClass="string" resultMap="SystemMenuWithAlloted">
      <![CDATA[
	      WITH RECURSIVE cte AS(
          SELECT
            "Id"
            ,"Name"
            ,"Title"
            ,"Image"
            ,"Category"
            ,"Target"
            ,"ParentId"
            ,CAST("Sort" AS VARCHAR) AS "FullSort"
            ,"NavigateUrl"
            ,"CreateUserId"
            ,"CreateDateTime"
            ,"ModifyUserId"
            ,"ModifyDateTime"
            ,"Status"
            ,"Sort"
          FROM "RBAC"."SystemMenu" a
          WHERE "ParentId"='0' AND "Status"=1 AND "Category"!=3
          UNION ALL
          SELECT 
            a."Id"
            ,a."Name"
            ,a."Title"
            ,a."Image"
            ,a."Category"
            ,a."Target"
            ,a."ParentId"
            ,cte."FullSort" || '-' || CAST(a."Sort" AS VARCHAR) AS "FullSort"
            ,a."NavigateUrl"
            ,a."CreateUserId"
            ,a."CreateDateTime"
            ,a."ModifyUserId"
            ,a."ModifyDateTime"
            ,a."Status"
            ,a."Sort"
          FROM "RBAC"."SystemMenu" a
          INNER JOIN cte ON a."ParentId"=cte."Id"
        ),
        canAccess as(
          SELECT
            Distinct M."Id"
          FROM "RBAC"."SystemMenu" M
          LEFT JOIN "RBAC"."RolePermission" R_R 
            ON R_R."SystemMenuId"=M."Id"
          WHERE R_R."RoleId"=#value#
        )
        SELECT
          cte.*,
          u1."Name" AS "CreateUserName",
          u2."Name" AS "ModifyUserName",
          CASE WHEN canAccess."Id" IS NULL THEN 0 ELSE 1 END AS "CanAccess"
        FROM cte
        LEFT JOIN canAccess
          ON cte."Id"=canAccess."Id"
        LEFT JOIN "RBAC"."User" u1
          ON cte."CreateUserId"=u1."Id"
        LEFT JOIN "RBAC"."User" u2
          ON cte."ModifyUserId"=u2."Id"
        WHERE cte."Status"=1
      ]]>
    </select>

    <!-- 获取标有用户组拥有访问权限的菜单列表 -->
    <select id="GetSystemMenusWithAllotedByUserGroup" parameterClass="string" resultMap="SystemMenuWithAlloted">
      <![CDATA[
        WITH RECURSIVE cte AS(
          SELECT
            "Id"
            ,"Name"
            ,"Title"
            ,"Image"
            ,"Category"
            ,"Target"
            ,"ParentId"
            ,CAST("Sort" AS VARCHAR) AS "FullSort"
            ,"NavigateUrl"
            ,"CreateUserId"
            ,"CreateDateTime"
            ,"ModifyUserId"
            ,"ModifyDateTime"
            ,"Status"
            ,"Sort"
          FROM "RBAC"."SystemMenu" a
          WHERE "ParentId"='0' AND "Status"=1 AND "Category"!=3
          UNION ALL
          SELECT 
            a."Id"
            ,a."Name"
            ,a."Title"
            ,a."Image"
            ,a."Category"
            ,a."Target"
            ,a."ParentId"
            ,cte."FullSort" || '-' || CAST(a."Sort" AS VARCHAR) AS "FullSort"
            ,a."NavigateUrl"
            ,a."CreateUserId"
            ,a."CreateDateTime"
            ,a."ModifyUserId"
            ,a."ModifyDateTime"
            ,a."Status"
            ,a."Sort"
          FROM "RBAC"."SystemMenu" a
          INNER JOIN cte ON a."ParentId"=cte."Id"
        ),
        canAccess as(
          SELECT
            Distinct M."Id"
          FROM "RBAC"."SystemMenu" M
          LEFT JOIN "RBAC"."UserGroupPermission" U_G
            ON U_G."SystemMenuId" = M."Id"
          WHERE U_G."UserGroupId"=#value#
        )
        SELECT
          cte.*,
          u1."Name" AS "CreateUserName",
          u2."Name" AS "ModifyUserName",
          CASE WHEN canAccess."Id" IS NULL THEN 0 ELSE 1 END AS "CanAccess"
        FROM cte
        LEFT JOIN canAccess
          ON cte."Id"=canAccess."Id"
        LEFT JOIN "RBAC"."User" u1
          ON cte."CreateUserId"=u1."Id"
        LEFT JOIN "RBAC"."User" u2
          ON cte."ModifyUserId"=u2."Id"
        WHERE cte."Status"=1
      ]]>
    </select>

    <!-- 获取用户可访问的菜单 -->
    <select id="GetAccessibleMenusByUser" parameterClass="string" resultMap="AccessibleMenu">
      <![CDATA[
        SELECT
          M."Id"
          ,M."Name"
          ,M."Title"
          ,M."Image"
          ,M."Target"
          ,M."ParentId"
          ,M."NavigateUrl"
          ,M."Sort"
        FROM
        (
          SELECT
            M."Name",
            M."Title",
            M."Image",
            M."Target",
            M."ParentId",
            M."Id",
            M."NavigateUrl",
            M."Sort",
            '角色权限' AS TheirTYPE
          FROM "RBAC"."SystemMenu" M
          LEFT JOIN "RBAC"."RolePermission" R_R 
            ON R_R."SystemMenuId"=M."Id"
          LEFT JOIN "RBAC"."UserRole" U_R 
            ON U_R."RoleId"=R_R."RoleId"
          WHERE M."Category"=1 AND U_R."UserId"=#value# AND M."Status"=1
          UNION ALL
          SELECT
            M."Name",
            M."Title",
            M."Image",
            M."Target",
            M."ParentId",
            M."Id",
            M."NavigateUrl",
            M."Sort",
            '用户组权限' AS TheirTYPE
          FROM "RBAC"."SystemMenu" M
          LEFT JOIN "RBAC"."UserGroupPermission" U_R 
            ON U_R."SystemMenuId"=M."Id"
          LEFT JOIN "RBAC"."UserGroupRelation" U_G 
            ON U_G."UserGroupId"=U_R."UserGroupId"
          WHERE M."Category"=1 AND U_G."UserId"=#value# AND M."Status" = 1
          UNION ALL
          SELECT
            M."Name",
            M."Title",
            M."Image",
            M."Target",
            M."ParentId",
            M."Id",
            M."NavigateUrl",
            M."Sort",
            '用户权限' AS TheirTYPE
          FROM "RBAC"."SystemMenu" M
          LEFT JOIN "RBAC"."UserPermission" U_R 
            ON U_R."SystemMenuId"=M."Id"
          WHERE M."Category"=1 AND U_R."UserId"=#value# AND M."Status"=1
         ) M
        GROUP BY M."Id", M."Name", M."Title", M."Image",
          M."Target", M."ParentId", M."NavigateUrl", M."Sort" 
        ORDER BY M."Sort"
      ]]>
    </select>

    <!-- 获取用户当前可以使用的按钮 -->
    <select id="GetAccessibleButtons" parameterClass="Params" resultMap="AccessibleMenu">
      <![CDATA[
        WITH cte AS
        (
          SELECT  
            M."Id",
            M."Name",
            M."Title",
            M."Image",
            M."Target",
            M."ParentId",
		        M."Url",
            M."NavigateUrl",
            M."Sort",
            M."Category"
          FROM
          (
            SELECT
              M."Name",
              B."Title",
              B."Image",
              M."Target",
              M."ParentId",
              M."Id",
			        M."NavigateUrl" AS "Url",
              B."Code" AS "NavigateUrl",
              M."Sort",
              M."Category",
              '角色权限' AS TheirTYPE
            FROM "RBAC"."SystemMenu" M
            LEFT JOIN "RBAC"."RolePermission" R_R 
              ON R_R."SystemMenuId"=M."Id"
            LEFT JOIN "RBAC"."UserRole" U_R 
              ON U_R."RoleId"=R_R."RoleId"
		        LEFT JOIN "RBAC"."Button" B
              ON M."Name"=B."Name"
            WHERE U_R."UserId"=#UserId# AND M."Status"=1
            UNION ALL
            SELECT
              M."Name",
              B."Title",
              B."Image",
              M."Target",
              M."ParentId",
              M."Id",
			        M."NavigateUrl" AS "Url",
              B."Code" AS "NavigateUrl",
              M."Sort",
              M."Category",
              '用户组权限' AS TheirTYPE
            FROM "RBAC"."SystemMenu" M
            LEFT JOIN "RBAC"."UserGroupPermission" U_R 
              ON U_R."SystemMenuId"=M."Id"
            LEFT JOIN "RBAC"."UserGroupRelation" U_G 
              ON U_G."UserGroupId"=U_R."UserGroupId"
		        LEFT JOIN "RBAC"."Button" B
              ON M."Name"=B."Name"
            WHERE U_G."UserId"=#UserId# AND M."Status"=1
            UNION ALL
            SELECT
              M."Name",
              B."Title",
              B."Image",
              M."Target",
              M."ParentId",
              M."Id",
			        M."NavigateUrl" AS "Url",
              B."Code" AS "NavigateUrl",
              M."Sort",
              M."Category",
              '用户权限' AS TheirTYPE
            FROM "RBAC"."SystemMenu" M
            LEFT JOIN "RBAC"."UserPermission" U_R 
              ON U_R."SystemMenuId"=M."Id"
		        LEFT JOIN "RBAC"."Button" B
              ON M."Name"=B."Name"
            WHERE U_R."UserId"=#UserId# AND M."Status"=1
          ) M
          GROUP BY M."Id", M."Name", M."Title", M."Image",
            M."Target", M."ParentId", M."Url", M."NavigateUrl", M."Sort", M."Category"
        )
        SELECT
          "Id"
          ,"Name"
          ,"Title"
          ,"Image"
          ,"Target"
          ,"ParentId"
          ,"NavigateUrl"
          ,"Sort"
        FROM cte
        WHERE "ParentId" IN (SELECT "Id" FROM cte WHERE "Url"=#NavigateUrl#) AND cte."Category"=3
        ORDER BY "Sort"
      ]]>
    </select>

    <!-- 获取菜单项 -->
    <select id="GetSystemMenu" parameterClass="string" resultMap="SystemMenu">
      <![CDATA[
        SELECT
          a."Id"
          ,a."Name"
          ,a."Title"
          ,a."Image"
          ,a."Category"
          ,a."Target"
          ,a."ParentId"
          ,a."Sort"
          ,a."NavigateUrl"
          ,a."CreateUserId"
          ,u1."Name" AS "CreateUserName"
          ,a."CreateDateTime"
          ,a."ModifyUserId"
          ,u2."Name" AS "ModifyUserName"
          ,a."ModifyDateTime"
          ,a."Status"
        FROM "RBAC"."SystemMenu" a
        LEFT JOIN "RBAC"."User" u1
          ON a."CreateUserId"=u1."Id"
        LEFT JOIN "RBAC"."User" u2
          ON a."ModifyUserId"=u2."Id"
        WHERE a."Id"=#value#
      ]]>
    </select>

    <!-- 添加或编辑系统菜单信息 -->
    <insert id="CreateOrUpdateSystemMenu" parameterClass="SystemMenu">
      <![CDATA[
        BEGIN;
          UPDATE "RBAC"."SystemMenu"
          SET
            "ParentId"=#ParentId#,
            "Name"=#Name#,
            "Title"=#Title#,
            "Image"=#Image#,
            "Category"=#Category#,
            "NavigateUrl"=#NavigateUrl#,
            "Target"=#Target#,
            "Sort"=#Sort#,
            "ModifyUserId"=#ModifyUserId#,
            "ModifyDateTime"=now()
          WHERE "Id"=#Id#;
          INSERT INTO "RBAC"."SystemMenu"
          ( 
            "Id",
            "ParentId",
            "Name",
            "Title",
            "Image",
            "Category",
            "NavigateUrl",
            "Target",
            "Sort",
            "Status",
            "CreateUserId",
            "CreateDateTime"
          )
          SELECT uuid_generate_v4(), #ParentId#, #Name#, #Title#, #Image#, 
            #Category#, #NavigateUrl#, #Target#, #Sort#, 1, #CreateUserId#, now()
          WHERE NOT EXISTS(SELECT * FROM "RBAC"."SystemMenu" WHERE "Id"=#Id#);
        COMMIT;
      ]]>
    </insert>

    <!-- 分配角色权限 -->
    <insert id="AllotPermissionByRole" parameterClass="Params">
      <![CDATA[
        BEGIN;
          DELETE FROM "RBAC"."RolePermission" WHERE "RoleId"=#RoleId#;
      ]]>
      <dynamic>
        <iterate property="RolePermissions" open="" close=";" conjunction=";">
          <![CDATA[
            INSERT INTO "RBAC"."RolePermission"
            (
              "Id",
              "RoleId",
              "SystemMenuId",
              "CreateUserId",
              "CreateDateTime"
            )
            VALUES
            (
              #RolePermissions[].Id#,
              #RolePermissions[].RoleId#,
              #RolePermissions[].SystemMenuId#,
              #RolePermissions[].CreateUserId#,
              now()
            )
          ]]>
        </iterate>
      </dynamic>
      <![CDATA[
        COMMIT;
      ]]>
    </insert>

    <!-- 分配用户权限 -->
    <insert id="AllotPermissionByUser" parameterClass="Params">
      <![CDATA[
        BEGIN;
          DELETE FROM "RBAC"."UserPermission" WHERE "UserId"=#UserId#;
      ]]>
      <dynamic>
        <isNotNull property="UserPermissions">
          <iterate property="UserPermissions" open="" close=";" conjunction=";">
            <![CDATA[
              INSERT INTO "RBAC"."UserPermission"
              (
                "Id",
                "UserId",
                "SystemMenuId",
                "CreateUserId",
                "CreateDateTime"
              )
              VALUES
              (
                #UserPermissions[].Id#,
                #UserPermissions[].UserId#,
                #UserPermissions[].SystemMenuId#,
                #UserPermissions[].CreateUserId#,
                now()
              )
            ]]>
          </iterate>
        </isNotNull>
      </dynamic>
      <![CDATA[
        COMMIT;
      ]]>
    </insert>

    <insert id="AllotPermissionByUserGroup" parameterClass="Params">
      <![CDATA[
        BEGIN;
          DELETE FROM "RBAC"."UserGroupPermission" WHERE "UserGroupId"=#UserGroupId#;
      ]]>
      <dynamic>
        <isNotNull property="UserGroupPermissions">
          <iterate property="UserGroupPermissions" open="" close=";" conjunction=";">
            <![CDATA[
              INSERT INTO "RBAC"."UserGroupPermission"
              (
                "Id",
                "UserGroupId",
                "SystemMenuId",
                "CreateUserId",
                "CreateDateTime"
              )
              VALUES
              (
                #UserGroupPermissions[].Id#,
                #UserGroupPermissions[].UserGroupId#,
                #UserGroupPermissions[].SystemMenuId#,
                #UserGroupPermissions[].CreateUserId#,
                now()
              )
            ]]>
          </iterate>
        </isNotNull>
      </dynamic>
      <![CDATA[
        COMMIT;
      ]]>
    </insert>

    <!-- 删除系统菜单信息 -->
    <delete id="DeleteSystemMenu" parameterClass="string">
      <![CDATA[
        DELETE FROM "RBAC"."SystemMenu" WHERE "Id"=#value#
      ]]>
    </delete>
  </statements>
</sqlMap>