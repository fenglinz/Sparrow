<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mercurius.Sparrow.Repositories.RBAC.User" xmlns="http://ibatis.apache.org/mapping">
  <alias>
    <typeAlias alias="User" type="Mercurius.Sparrow.Entities.RBAC.User, Mercurius.Sparrow.Entities" />
    <typeAlias alias="UserSO" type="Mercurius.Sparrow.Entities.RBAC.SO.UserSO, Mercurius.Sparrow.Entities" />
    <typeAlias alias="UserGroup" type="Mercurius.Sparrow.Entities.RBAC.UserGroup, Mercurius.Sparrow.Entities" />
    <typeAlias alias="UserGroupRelation" type="Mercurius.Sparrow.Entities.RBAC.UserGroupRelation, Mercurius.Sparrow.Entities" />
  </alias>

  <resultMaps>
    <resultMap id="User" class="User">
      <result column="Id" property="Id" />
      <result column="Code" property="Code" />
      <result column="Account" property="Account" />
      <result column="Name" property="Name" />
      <result column="Sex" property="Sex" />
      <result column="Title" property="Title" />
      <result column="Email" property="Email" />
      <result column="Theme" property="Theme"/>
      <result column="Reporter" property="Reporter" />
      <result column="ReporterName" property="ReporterName" />
      <result column="Remark" property="Remark" />
      <result column="Status" property="Status"/>
      <result column="CreateUserId" property="CreateUserId" />
      <result column="CreateUserName" property="CreateUserName" />
      <result column="CreateDateTime" property="CreateDateTime" />
      <result column="ModifyUserId" property="ModifyUserId" />
      <result column="ModifyUserName" property="ModifyUserName" />
      <result column="ModifyDateTime" property="ModifyDateTime" />
    </resultMap>

    <resultMap id="SearchUser" class="User" extends="User">
      <result property="RowIndex" column="RowIndex" />
      <result property="DepartmentNames" column="DepartmentNames" />
    </resultMap>
    
    <resultMap id="ValidateUser" class="User">
      <result property="Id" column="Id"/>
      <result property="Code" column="Code"/>
      <result property="Name" column="Name"/>
      <result property="Account" column="Account"/>
      <result property="Password" column="Password"/>
      <result property="Sex" column="Sex"/>
      <result property="Title" column="Title" />
      <result property="Status" column="Status"/>
    </resultMap>
    
    <resultMap id="GetUser" class="User" extends="User">
      <result column="Password" property="Password" />
      <result column="Id" property="Roles" lazyLoad="true" select="Mercurius.Sparrow.Repositories.RBAC.User.GetRolesByUser" />
      <result column="Id" property="UserGroups" lazyLoad="true" select="Mercurius.Sparrow.Repositories.RBAC.User.GetUserGroupsByUser" />
      <result column="Id" property="Departments" lazyLoad="true" select="Mercurius.Sparrow.Repositories.RBAC.User.GetDepartmentsByUser" />
    </resultMap>

    <resultMap id="UserGroup" class="UserGroup">
      <result property="Id" column="Id" />
      <result property="ParentId" column="ParentId" />
      <result property="Code" column="Code" />
      <result property="Name" column="Name" />
      <result property="Sort" column="Sort" />
      <result property="Remark" column="Remark" />
      <result property="Status" column="Status" />
      <result property="CreateUserId" column="CreateUserId" />
      <result property="CreateUserName" column="CreateUserName" />
      <result property="CreateDateTime" column="CreateDateTime" />
      <result property="ModifyUserId" column="ModifyUserId" />
      <result property="ModifyUserName" column="ModifyUserName" />
      <result property="ModifyDateTime" column="ModifyDateTime" />
    </resultMap>

    <resultMap id="GroupUsers" class="User">
      <result property="Id" column="Id" />
      <result property="Code" column="Code" />
      <result property="Account" column="Account" />
      <result property="Name" column="Name" />
    </resultMap>
  </resultMaps>

  <statements>

    <!-- 更新用户状态 -->
    <update id="UpdateUserStatus" parameterClass="Params">
      <![CDATA[
        UPDATE "RBAC"."User"
        SET
          "Status"=#Status#
        WHERE "Id"=#UserId#
      ]]>
    </update>

    <!-- 修改用户密码 -->
    <update id="ChangePassword" parameterClass="User">
      <![CDATA[
        UPDATE "RBAC"."User"
        SET
          "Password"=#Password#,
          "ModifyUserId"=#ModifyUserId#,
          "ModifyDateTime"=#ModifyDateTime#
        WHERE "Id"=#Id#
      ]]>
    </update>

    <!-- 添加或者编辑用户信息 -->
    <update id="CreateOrUpdateUser" parameterClass="User">
      <![CDATA[
        IF EXISTS(SELECT * FROM RBAC.[User] WHERE Id=#Id#)
          UPDATE RBAC.[User]
          SET
            Code=#Code#,
            Account=#Account#,
            Password=#Password#,
            Name=#Name#,
            Sex=#Sex#,
            Title=#Title#,
            Email=#Email#,
            Reporter=#Reporter#,
            Remark=#Remark#,
            ModifyUserId=#ModifyUserId#,
            ModifyDateTime=#ModifyDateTime#
          WHERE Id=#Id#
        ELSE
          INSERT INTO RBAC.[User]
          ( 
            Id,
            Code,
            Account,
            Password,
            Name,
            Sex,
            Title,
            Email,
            Reporter,
            Remark,
            Status,
            CreateUserId,
            CreateDateTime
          )
          VALUES
          (
            #Id#,
            #Code#,
            #Account#,
            #Password#,
            #Name#,
            #Sex#,
            #Title#,
            #Email#,
            #Reporter#,
            #Remark#,
            1,
            #CreateUserId#,
            #CreateDateTime#
          )
      ]]>
    </update>

    <!-- 添加或者修改用户组信息 -->
    <update id="CreateOrUpdateUserGroup" parameterClass="UserGroup">
      <![CDATA[
        IF EXISTS(SELECT * FROM RBAC.UserGroup WHERE Id=#Id#)
          UPDATE RBAC.UserGroup
          SET
            ParentId=#ParentId#,
            Code=#Code#,
            Name=#Name#,
            Sort=#Sort#,
            Remark=#Remark#,
            ModifyUserId=#ModifyUserId#,
            ModifyDateTime=#ModifyDateTime#
          WHERE Id=#Id#
        ELSE
          INSERT INTO RBAC.UserGroup
          ( 
            Id,
            ParentId,
            Code,
            Name,
            Sort,
            Remark,
            Status,
            CreateUserId,
            CreateDateTime
          )
          VALUES
          (
            #Id#,
            #ParentId#,
            #Code#,
            #Name#,
            #Sort#,
            #Remark#,
            1,
            #CreateUserId#,
            #CreateDateTime#
          )
      ]]>
    </update>

    <!-- 添加或者编辑用户组关系 -->
    <insert id="CreateOrUpdateRelation" parameterClass="Params">
      <![CDATA[
        BEGIN;
          DELETE FROM "RBAC"."UserGroupRelation" WHERE "UserId"=#UserId#;
      ]]>
      <dynamic>
        <isNotNull property="UserGroupRelations">
          <iterate property="UserGroupRelations" open="" close=";" conjunction=";">
            <![CDATA[
              INSERT INTO "RBAC"."UserGroupRelation"
              (
                "Id",
                "UserId",
                "UserGroupId",
                "CreateUserId",
                "CreateDateTime"
              )
              values
              (
                #UserGroupRelations[].Id#,
                #UserGroupRelations[].UserId#,
                #UserGroupRelations[].UserGroupId#,
                #UserGroupRelations[].CreateUserId#,
                #UserGroupRelations[].CreateDateTime#
              )
            ]]>
          </iterate>
        </isNotNull>
      </dynamic>
      <![CDATA[
        COMMIT;
      ]]>
    </insert>

    <!-- 添加用户组成员 -->
    <insert id="AddUserGroupMembers" parameterClass="Params">
      <dynamic>
        <isNotNull property="UserGroupRelations">
          <iterate property="UserGroupRelations" open="BEGIN;" close="; COMMIT;" conjunction=";">
            <![CDATA[
              INSERT INTO "RBAC"."UserGroupRelation"
              (
                "Id",
                "UserId",
                "UserGroupId",
                "CreateUserId",
                "CreateDateTime"
              )
              values
              (
                #UserGroupRelations[].Id#,
                #UserGroupRelations[].UserId#,
                #UserGroupRelations[].UserGroupId#,
                #UserGroupRelations[].CreateUserId#,
                #UserGroupRelations[].CreateDateTime#
              )
            ]]>
          </iterate>
        </isNotNull>
      </dynamic>
    </insert>

    <!-- 删除用户组成员 -->
    <delete id="RemoveUserGroupMember" parameterClass="Params">
      <![CDATA[
        DELETE FROM "RBAC"."UserGroupRelation" WHERE "UserGroupId"=#UserGroupId# AND "UserId"=#UserId#
      ]]>
    </delete>

    <!-- 验证用户登录信息 -->
    <select id="ValidateUser" parameterClass="Params" resultMap="ValidateUser">
      <![CDATA[
        SELECT
          "Id"
          ,"Code"
          ,"Name"
          ,"Account"
          ,"Password"
          ,"Sex"
          ,"Title"
          ,"Status"
        FROM "RBAC"."User"
        WHERE "Account"=#Account# AND "Password"=#Password# AND "Status"!=0
      ]]>
    </select>

    <!-- 获取用户信息 -->
    <select id="GetUser" parameterClass="string" resultMap="GetUser">
      <![CDATA[
        SELECT
          a."Id",
          a."Code",
          a."Account",
          a."Password",
          a."Name",
          a."Sex",
          a."Title",
          a."Email",
          a."Theme",
          a."Reporter",
          b."Name" AS "ReporterName",
          a."Remark",
          a."Status",
          a."CreateUserId",
          u1."Name" AS "CreateUserName",
          a."CreateDateTime",
          a."ModifyUserId",
          u2."Name" AS "ModifyUserName",
          a."ModifyDateTime"
        FROM "RBAC"."User" a
        LEFT JOIN "RBAC"."User" b
          ON a."Reporter"=b."Id"
        LEFT JOIN "RBAC"."User" u1
          ON a."CreateUserId"=u1."Id"
        LEFT JOIN "RBAC"."User" u2
          ON a."ModifyUserId"=u2."Id"
        WHERE a."Id"=#value#
      ]]>
    </select>

    <!-- 根据账号获取用户信息 -->
    <select id="GetUserByAccount" parameterClass="string" resultMap="User">
      <![CDATA[
        SELECT
          a."Id",
          a."Code",
          a."Account",
          a."Password",
          a."Name",
          a."Sex",
          a."Title",
          a."Email",
          a."Theme",
          a."Reporter",
          b."Name" AS "ReporterName",
          a."Remark",
          a."Status",
          a."CreateUserId",
          u1."Name" AS "CreateUserName",
          a."CreateDateTime",
          a."ModifyUserId",
          u2."Name" AS "ModifyUserName",
          a."ModifyDateTime"
        FROM "RBAC"."User" a
        LEFT JOIN "RBAC"."User" b
          ON a."Reporter"=b."Id"
        LEFT JOIN "RBAC"."User" u1
          ON a."CreateUserId"=u1."Id"
        LEFT JOIN "RBAC"."User" u2
          ON a."ModifyUserId"=u2."Id"
        WHERE a."Account"=#value#
      ]]>
    </select>

    <select id="GetDepartmentsByUser" parameterClass="string" resultClass="string">
      SELECT "OrganizationId" FROM "RBAC"."StaffOrganize" WHERE "UserId"=#value#
    </select>

    <select id="GetRolesByUser" parameterClass="string" resultClass="string">
      SELECT "RoleId" FROM "RBAC"."UserRole" WHERE "UserId"=#value#
    </select>

    <select id="GetUserGroupsByUser" parameterClass="string" resultClass="string">
      SELECT "UserGroupId" FROM "RBAC"."UserGroupRelation" WHERE "UserId"=#value#
    </select>

    <!-- 查询用户信息 -->
    <select id="GetUsers" parameterClass="UserSO" resultMap="SearchUser">
      <![CDATA[
        with cte as(					
	        SELECT
		        DISTINCT(U."Id"),
		        U."Code",
		        U."Name",
		        U."Account",
            U."Email",
            U."Theme",
		        U."Sex",
		        U."Title",
		        U."Status",
		        U."Reporter",
		        U1."Name" AS "ReporterName",
		        U."Remark",
            U."CreateUserId",
            U2."Name" AS "CreateUserName",
		        U."CreateDateTime",
            u."ModifyUserId",
            u3."Name" AS "ModifyUserName",
            u."ModifyDateTime",
		        array_to_string(ARRAY(
				        SELECT
					        "Name" 
				        from "RBAC"."Organization" o1
				        where "Id" in(SELECT "OrganizationId" FROM "RBAC"."StaffOrganize" WHERE "UserId"=U."Id")),
		        '，') AS "DepartmentNames",
		        array_to_string(ARRAY(
				        SELECT
					        b."ParentId"||','||a."OrganizationId"||',' 
				        FROM "RBAC"."StaffOrganize" a
				        left join "RBAC"."Organization" b
					        on a."OrganizationId"=b."Id"
				        WHERE "UserId"=U."Id"),
		        '，') AS "ParentIds"
	        FROM "RBAC"."User" U
	        LEFT JOIN "RBAC"."User" U1
		        ON U."Reporter"=U1."Id"
          LEFT JOIN "RBAC"."User" U2
            ON U."CreateUserId"=u2."Id"
          LEFT JOIN "RBAC"."User" u3
            ON U."ModifyUserId"=u3."Id"
	        LEFT JOIN "RBAC"."StaffOrganize" S
		        ON U."Id" = S."UserId"
        )
        SELECT
          *,
          row_number() OVER(ORDER BY "CreateDateTime" ASC) AS "RowIndex"
        FROM cte
        WHERE "Status"!=0
      ]]>
      <dynamic>
        <isNotNull property=".">
          <isNotEmpty property="OrganizationId" prepend="AND">
            position(#OrganizationId# || ',' in "ParentIds")>0
          </isNotEmpty>
          <isNotEmpty property="SearchValue">
            <isEqual property="SearchCategory" compareValue="Code" prepend="AND">
              "Code" LIKE '%'||#SearchValue#||'%'
            </isEqual>
            <isEqual property="SearchCategory" compareValue="Account" prepend="AND">
              "Account" LIKE '%'||#SearchValue#||'%'
            </isEqual>
            <isEqual property="SearchCategory" compareValue="Name" prepend="AND">
              "Name" LIKE '%'||#SearchValue#||'%'
            </isEqual>
          </isNotEmpty>
          <isNotNull property="ExcludeReporter" prepend="AND">
            <![CDATA["Id"<>#ExcludeReporter#]]>
          </isNotNull>
        </isNotNull>
      </dynamic>
      <![CDATA[
        ORDER BY "RowIndex" ASC
        OFFSET (#PageIndex#-1)*#PageSize#
        LIMIT #PageSize#
      ]]>
    </select>

    <!-- 获取查询用户信息的总记录数 -->
    <select id="GetUsersCount" parameterClass="UserSO" resultClass="int">
      <![CDATA[
        with cte as(					
	        SELECT
		        DISTINCT(U."Id"),
		        U."Code",
		        U."Name",
		        U."Account",
            U."Email",
            U."Theme",
		        U."Sex",
		        U."Title",
		        U."Status",
		        U."Reporter",
		        U1."Name" AS "ReporterName",
		        U."Remark",
            U."CreateUserId",
		        U."CreateDateTime",
		        array_to_string(ARRAY(
				        SELECT
					        "Name" 
				        from "RBAC"."Organization" o1
				        where "Id" in(SELECT "OrganizationId" FROM "RBAC"."StaffOrganize" WHERE "UserId"=U."Id")),
		        '，') AS "DepartmentNames",
		        array_to_string(ARRAY(
				        SELECT
					        b."ParentId"||','||a."OrganizationId"||',' 
				        FROM "RBAC"."StaffOrganize" a
				        left join "RBAC"."Organization" b
					        on a."OrganizationId"=b."Id"
				        WHERE "UserId"=U."Id"),
		        '，') AS "ParentIds"
	        FROM "RBAC"."User" U
	        LEFT JOIN "RBAC"."User" U1
		        ON U."Reporter"=U1."Id"
	        LEFT JOIN "RBAC"."StaffOrganize" S
		        ON U."Id" = S."UserId"
        )
        SELECT COUNT(*) FROM cte WHERE "Status"!=0
      ]]>
      <dynamic>
        <isNotNull property=".">
          <isNotEmpty property="OrganizationId" prepend="AND">
            position(#OrganizationId# || ',' in "ParentIds")>0
          </isNotEmpty>
          <isNotEmpty property="SearchValue">
            <isEqual property="SearchCategory" compareValue="Code" prepend="AND">
              "Code" LIKE '%'||#SearchValue#||'%'
            </isEqual>
            <isEqual property="SearchCategory" compareValue="Account" prepend="AND">
              "Account" LIKE '%'||#SearchValue#||'%'
            </isEqual>
            <isEqual property="SearchCategory" compareValue="Name" prepend="AND">
              "Name" LIKE '%'||#SearchValue#||'%'
            </isEqual>
          </isNotEmpty>
          <isNotNull property="ExcludeReporter" prepend="AND">
            <![CDATA["Id"<>#ExcludeReporter#]]>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </select>

    <!-- 获取用户组成员 -->
    <select id="GetUsersByGroup" parameterClass="string" resultMap="GroupUsers">
      <![CDATA[
        SELECT
          u."Id"
          ,u."Code"
          ,u."Account"
          ,u."Name"
        FROM "RBAC"."User" u
        INNER JOIN "RBAC"."UserGroupRelation" u_r
          ON u."Id"=u_r."UserId"
        WHERE u_r."UserGroupId"=#value#
      ]]>
    </select>

    <!-- 获取用户组信息 -->
    <select id="GetUserGroup" parameterClass="string" resultMap="UserGroup">
      <![CDATA[
        SELECT
          a."Id"
          ,a."ParentId"
          ,a."Code"
          ,a."Name"
          ,a."Sort"
          ,a."Remark"
          ,a."CreateUserId"
          ,u1."Name" AS "CreateUserName"
          ,a."CreateDateTime"
          ,a."ModifyUserId"
          ,u2."Name" AS "ModifyUserName"
          ,a."ModifyDateTime"
          ,a."Status"
        FROM "RBAC"."UserGroup" a
        LEFT JOIN "RBAC"."User" u1
          ON a."CreateUserId"=u1."Id"
        LEFT JOIN "RBAC"."User" u2
          ON a."ModifyUserId"=u2."Id"
        WHERE a."Id"=#value#
      ]]>
    </select>

    <!-- 获取用户组信息 -->
    <select id="GetUserGroups" resultMap="UserGroup">
      <![CDATA[
        WITH RECURSIVE CTE AS(
	        SELECT
            "Id"
            ,"Name"
            ,"ParentId"
            ,"Code"
            ,"Sort"
            ,"Remark"
            ,"CreateUserId"
            ,"CreateDateTime"
            ,"ModifyUserId"
            ,"ModifyDateTime"
            ,"Status"
	        FROM "RBAC"."UserGroup"
	        WHERE "ParentId"='0'
	        UNION ALL
          SELECT
            a."Id"
            ,a."Name"
            ,a."ParentId"
            ,a."Code"
            ,a."Sort"
            ,a."Remark"
            ,a."CreateUserId"
            ,a."CreateDateTime"
            ,a."ModifyUserId"
            ,a."ModifyDateTime"
            ,a."Status"
	        FROM "RBAC"."UserGroup" a
	        INNER JOIN cte
            on a."ParentId"=cte."Id"
        )
        SELECT 
          cte.*,
          u1."Name" AS "CreateUserName",
          u2."Name" AS "ModifyUserName"
        FROM cte
        LEFT JOIN "RBAC"."User" u1
          ON cte."CreateUserId"=u1."Id"
        LEFT JOIN "RBAC"."User" u2
          ON cte."ModifyUserId"=u2."Id"
        WHERE cte."Status"=1
      ]]>
    </select>

    <!-- 获取未分配组的用户 -->
    <select id="GetUnAllotGroupUsers" parameterClass="string" resultMap="GroupUsers">
      <![CDATA[
        SELECT
          u."Id"
          ,u."Code"
          ,u."Account"
          ,u."Name"
        FROM "RBAC"."User" u
        LEFT JOIN "RBAC"."UserGroupRelation" u_r
          ON u."Id"=u_r."UserId" AND u_r."UserGroupId"=#value#
        WHERE u."Status"=1 AND u_r."Id" IS NULL
      ]]>
    </select>
  </statements>
</sqlMap>