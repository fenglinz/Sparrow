<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mercurius.Sparrow.Repositories.RBAC.Role" xmlns="http://ibatis.apache.org/mapping">
  <alias>
    <typeAlias alias="Role" type="Mercurius.Sparrow.Entities.RBAC.Role, Mercurius.Sparrow.Entities" />
  </alias>

  <statements>

    <!-- 添加或者编辑角色信息 -->
    <update id="CreateOrUpdate" parameterClass="Role">
      <![CDATA[
        IF EXISTS(SELECT * FROM RBAC.Role WHERE Id=#Id#)
          UPDATE RBAC.Role
          SET
            ParentId=#ParentId#,
            Name=#Name#,
            Remark=#Remark#,
            Sort=#Sort#,
            ModifyUserId=#ModifyUserId#,
            ModifyDateTime=GETDATE()
          WHERE Id=#Id#
        ELSE
          INSERT INTO RBAC.Role
          ( 
            Id,
            ParentId,
            Name,
            Remark,
            Sort,
            Status,
            CreateUserId,
            CreateDateTime
          )
          VALUES
          (
            #Id#,
            #ParentId#,
            #Name#,
            #Remark#,
            #Sort#,
            1,
            #CreateUserId#,
            GETDATE()
          )
      ]]>
    </update>

    <!-- 删除角色 -->
    <delete id="Remove" parameterClass="string">
      <![CDATA[
        DELETE FROM RBAC.Role WHERE Id=#value#;
        DELETE FROM RBAC.UserRole WHERE RoleId=#value#;
        DELETE FROM RBAC.RolePermission WHERE RoleId=#value#;
      ]]>
    </delete>

    <!-- 添加角色成员 -->
    <insert id="AddMembers" parameterClass="Params">
      <isNotNull property="UserIds">
        <iterate property="UserIds" open="" close="" conjunction="">
          <![CDATA[
            IF NOT EXISTS(SELECT * FROM RBAC.[UserRole] WHERE RoleId=#Id# AND UserId=#UserIds[]#)
              INSERT INTO RBAC.UserRole
              (
                Id,
                UserId,
                RoleId,
                CreateUserId,
                CreateDateTime
              )
              VALUES
              (
                NEWID(),
                #UserIds[]#,
                #Id#,
                #CreateUserId#,
                GETDATE()
              )
          ]]>
        </iterate>
      </isNotNull>
    </insert>

    <!-- 删除角色成员 -->
    <delete id="RemoveMembers" parameterClass="Params">
      <isNotNull property="UserIds">
        <![CDATA[
          DELETE FROM RBAC.UserRole WHERE RoleId=#Id# AND UserId IN
        ]]>
        <iterate property="UserIds" open="(" conjunction="," close=");">
          <![CDATA[#UserIds[]#]]>
        </iterate>
      </isNotNull>
    </delete>

    <!-- 根据编号获取角色信息 -->
    <select id="GetRoleById" parameterClass="string" resultClass="Role">
      <![CDATA[
        SELECT
          a.Id
          ,a.ParentId
          ,a.Name
          ,a.Sort
          ,a.Remark
          ,a.Status
          ,u1.Name AS CreateUserName
          ,a.CreateDateTime
          ,u2.Name AS ModifyUserName
          ,a.ModifyDateTime
        FROM RBAC.Role a
        LEFT JOIN RBAC.[User] u1
          ON a.CreateUserId=u1.Id
        LEFT JOIN RBAC.[User] u2
          ON a.ModifyUserId=u2.Id
        WHERE a.Id=#value#
      ]]>
    </select>

    <!-- 获取角色信息 -->
    <select id="GetRoles" resultClass="Role">
      <![CDATA[
        WITH CTE AS(
	        SELECT
		        Id
		        ,ParentId
		        ,Name
		        ,Sort
		        ,Remark
		        ,Status
		        ,CreateUserId
		        ,CreateDateTime
		        ,ModifyUserId
		        ,ModifyDateTime
		        ,ROW_NUMBER() over(order by Sort asc) as orderId
	        FROM RBAC.Role
	        WHERE ParentId='0'
	        UNION ALL
          SELECT
		        a.Id
		        ,a.ParentId
		        ,a.Name
		        ,a.Sort
		        ,a.Remark
		        ,a.Status
		        ,a.CreateUserId
		        ,a.CreateDateTime
		        ,a.ModifyUserId
		        ,a.ModifyDateTime
		        ,cte.orderId*100+(ROW_NUMBER() over(order by a.sort asc)) as orderId
	        FROM RBAC.Role a
	        INNER JOIN cte
            ON a.ParentId=cte.Id
        )
        SELECT 
          cte.*,
          u1.Name AS CreateUserName,
          u2.Name AS ModifyUserName
        FROM cte
        LEFT JOIN RBAC.[User] u1
          ON cte.CreateUserId=u1.Id
        LEFT JOIN RBAC.[User] u2
          ON cte.ModifyUserId=u2.Id
        WHERE cte.Status=1
        ORDER BY LTRIM(orderId)
      ]]>
    </select>

    <!-- 获取用户拥有的角色 -->
    <select id="GetRolesByUser" parameterClass="string" resultClass="Role">
      <![CDATA[
        SELECT
          Name
          ,Remark
        FROM RBAC.Role
        WHERE Id IN(SELECT RoleId FROM RBAC.UserRole WHERE UserId=#value#)
      ]]>
    </select>

    <!-- 获取角色用户 -->
    <select id="GetMembers" parameterClass="UserSO" resultClass="User">
      <![CDATA[
        WITH cte AS(
          SELECT
            DISTINCT a.*,
            CASE 
              WHEN p.Name IS NULL THEN NULL
              ELSE STUFF(p.Name,LEN(p.Name),1,'')
            END DepartmentNames
          FROM RBAC.[User] a 
          INNER JOIN RBAC.UserRole b ON a.Id=b.UserId
          LEFT JOIN RBAC.StaffOrganize c ON a.Id=c.UserId
          OUTER APPLY(
           SELECT 
            Name=REPLACE(
              REPLACE(
                (
                  SELECT Name FROM RBAC.Organization
                  WHERE Id IN (
                    SELECT OrganizationId FROM RBAC.StaffOrganize
                    WHERE UserId=a.Id) FOR XML PATH('')
                ),'<Name>','')
              ,'</Name>','，')
          ) p
          WHERE b.RoleId=#RoleId# AND a.Status=1
        ),
        pg AS(
	        SELECT 
		        *,
		        ROW_NUMBER() OVER(ORDER BY CreateDateTime ASC) AS RowIndex
	        FROM cte
        )
        SELECT * FROM pg
        WHERE RowIndex BETWEEN (#PageIndex#-1)*#PageSize# AND #PageIndex#*#PageSize#
        ORDER BY RowIndex ASC
      ]]>
    </select>

    <!-- 获取角色用户的记录数 -->
    <select id="GetMembersCount" parameterClass="UserSO" resultClass="int">
      <![CDATA[
        SELECT
          COUNT(*)
        FROM RBAC.[User] a
        INNER JOIN RBAC.UserRole b ON a.Id=b.UserId
        LEFT JOIN RBAC.StaffOrganize c ON a.Id=c.UserId
        WHERE b.RoleId=#RoleId# AND a.Status=1
      ]]>
    </select>
    
    <!-- 获取未分配角色的用户 -->
    <select id="GetUnAllotUsers" parameterClass="UserSO" resultClass="User">
      <![CDATA[
        WITH cte AS(
          SELECT
            a.*,
            p.Name AS DepartmentNames,
            p.ParentIds AS ParentIds
          FROM RBAC.[User] a
          LEFT JOIN RBAC.UserRole b
            ON a.Id=b.UserId AND b.RoleId=#RoleId#
          OUTER APPLY(
           SELECT 
            Name=REPLACE(
              REPLACE(
                (
                  SELECT Name FROM RBAC.Organization
                  WHERE Id IN (
                    SELECT OrganizationId FROM RBAC.StaffOrganize
                    WHERE UserId=a.Id) FOR XML PATH('')
                ),'<Name>','')
              ,'</Name>','，'),
              ParentIds=REPLACE(
			        REPLACE(
				        (
						      SELECT
                    b1.ParentId+','+a1.OrganizationId+',' 
                  FROM RBAC.StaffOrganize a1
								  LEFT JOIN RBAC.Organization b1
									  on a1.OrganizationId=b1.Id
						      WHERE UserId=a.Id FOR XML PATH('')
				        ),'<ParentId>','')
			        ,'</ParentId>',',')
          ) p
          WHERE b.Id IS NULL AND a.[Status]=1
      ]]>
      <include refid="GetUnAllotUsersCondition" />
      <![CDATA[
        ),
        pg AS(
          SELECT
            *,
            ROW_NUMBER() OVER(ORDER BY CreateDateTime ASC) AS RowIndex
          FROM cte
        )
        SELECT * FROM pg
        WHERE RowIndex BETWEEN (#PageIndex#-1)*#PageSize# AND #PageIndex#*#PageSize#
        ORDER BY RowIndex ASC
      ]]>
    </select>
  
    <!-- 获取未分配角色的用户的数量 -->
    <select id="GetUnAllotUsersCount" parameterClass="UserSO" resultClass="int">
      <![CDATA[
        SELECT
          COUNT(*)
        FROM RBAC.[User] a
        LEFT JOIN RBAC.UserRole b
          ON a.Id=b.UserId AND b.RoleId=#RoleId#
        OUTER APPLY(
         SELECT 
            ParentIds=REPLACE(
			      REPLACE(
				      (
					      SELECT
                  b1.ParentId+','+a1.OrganizationId+',' 
                FROM RBAC.StaffOrganize a1
							  LEFT JOIN RBAC.Organization b1
								  on a1.OrganizationId=b1.Id
					      WHERE UserId=a.Id FOR XML PATH('')
				      ),'<ParentId>','')
			      ,'</ParentId>',',')
        ) p
        WHERE b.Id IS NULL AND a.[Status]=1
      ]]>
      <include refid="GetUnAllotUsersCondition" />
    </select>
  
    <!-- 获取未分配角色的用户的查询条件 -->
    <sql id="GetUnAllotUsersCondition">
      <isNotNull property=".">
        <isNotEmpty property="OrganizationId" prepend="AND">
          CHARINDEX(#OrganizationId#+',', p.ParentIds)>0
        </isNotEmpty>
        <isNotEmpty property="SearchValue">
          <isEqual property="SearchCategory" compareValue="Code" prepend="AND">
            a.Code LIKE '%'+#SearchValue#+'%'
          </isEqual>
          <isEqual property="SearchCategory" compareValue="Account" prepend="AND">
            a.Account LIKE '%'+#SearchValue#+'%'
          </isEqual>
          <isEqual property="SearchCategory" compareValue="Name" prepend="AND">
            a.Name LIKE '%'+#SearchValue#+'%'
          </isEqual>
        </isNotEmpty>
      </isNotNull>
    </sql>
  </statements>
</sqlMap>