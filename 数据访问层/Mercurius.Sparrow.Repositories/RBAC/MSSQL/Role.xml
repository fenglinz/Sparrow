<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mercurius.Sparrow.Repositories.RBAC.Role" xmlns="http://ibatis.apache.org/mapping">
  <alias>
    <typeAlias alias="Role" type="Mercurius.Sparrow.Entities.RBAC.Role, Mercurius.Sparrow.Entities" />
    <typeAlias alias="UserRole" type="Mercurius.Sparrow.Entities.RBAC.UserRole, Mercurius.Sparrow.Entities" />
  </alias>

  <resultMaps>
    <resultMap id="GetRoleUsersRM" class="UserRole">
      <result property="RowIndex" column="RowIndex" />
      <result property="UserId" column="UserId" />
      <result property="UserName" column="UserName" />
      <result property="Departments" column="UserId" select="Mercurius.Sparrow.Repositories.RBAC.Role.GetOwnedDepartments" lazyLoad="true" />
    </resultMap>
  </resultMaps>

  <statements>

    <!-- 添加或者编辑角色信息 -->
    <update id="CreateOrUpdate" parameterClass="Role">
      <![CDATA[
        IF EXISTS(SELECT * FROM RBAC.Role WHERE Id=#Id#)
          UPDATE RBAC.Role
          SET
            ParentId=#ParentId#,
            Name=#Name#,
            Remark=#Remark#,
            Sort=#Sort#,
            ModifyUserId=#ModifyUserId#,
            ModifyDateTime=GETDATE()
          WHERE Id=#Id#
        ELSE
          INSERT INTO RBAC.Role
          ( 
            Id,
            ParentId,
            Name,
            Remark,
            Sort,
            Status,
            CreateUserId,
            CreateDateTime
          )
          VALUES
          (
            #Id#,
            #ParentId#,
            #Name#,
            #Remark#,
            #Sort#,
            1,
            #CreateUserId#,
            GETDATE()
          )
      ]]>
    </update>

    <!-- 添加或者编辑用户角色关系信息 -->
    <insert id="CreateOrUpdateRelation" parameterClass="Params">
      <![CDATA[
        BEGIN
          DELETE FROM RBAC.UserRole WHERE UserId=#UserId#;
      ]]>
      <dynamic>
        <isNotNull property="UserRoles">
          <![CDATA[
            INSERT INTO RBAC.UserRole
            (
              Id,
              UserId,
              RoleId,
              CreateUserId,
              CreateDateTime
            )
            VALUES
          ]]>
          <iterate property="UserRoles" open="" close=";" conjunction=",">
            <![CDATA[
              (
                NEWID(),
                #UserRoles[].UserId#,
                #UserRoles[].RoleId#,
                #UserRoles[].CreateUserId#,
                GETDATE()
              )
            ]]>
          </iterate>
        </isNotNull>
      </dynamic>
      <![CDATA[
        END
      ]]>
    </insert>

    <!-- 根据编号获取角色信息 -->
    <select id="GetRoleById" parameterClass="string" resultClass="Role">
      <![CDATA[
        SELECT
          a.Id
          ,a.ParentId
          ,a.Name
          ,a.Sort
          ,a.Remark
          ,a.Status
          ,u1.Name AS CreateUserName
          ,a.CreateDateTime
          ,u2.Name AS ModifyUserName
          ,a.ModifyDateTime
        FROM RBAC.Role a
        LEFT JOIN RBAC.[User] u1
          ON a.CreateUserId=u1.Id
        LEFT JOIN RBAC.[User] u2
          ON a.ModifyUserId=u2.Id
        WHERE a.Id=#value#
      ]]>
    </select>

    <!-- 获取角色信息 -->
    <select id="GetRoles" resultClass="Role">
      <![CDATA[
        WITH CTE AS(
	        SELECT
		        Id
		        ,ParentId
		        ,Name
		        ,Sort
		        ,Remark
		        ,Status
		        ,CreateUserId
		        ,CreateDateTime
		        ,ModifyUserId
		        ,ModifyDateTime
		        ,ROW_NUMBER() over(order by Sort asc) as orderId
	        FROM RBAC.Role
	        WHERE ParentId='0'
	        UNION ALL
          SELECT
		        a.Id
		        ,a.ParentId
		        ,a.Name
		        ,a.Sort
		        ,a.Remark
		        ,a.Status
		        ,a.CreateUserId
		        ,a.CreateDateTime
		        ,a.ModifyUserId
		        ,a.ModifyDateTime
		        ,cte.orderId*100+(ROW_NUMBER() over(order by a.sort asc)) as orderId
	        FROM RBAC.Role a
	        INNER JOIN cte
            ON a.ParentId=cte.Id
        )
        SELECT 
          cte.*,
          u1.Name AS CreateUserName,
          u2.Name AS ModifyUserName
        FROM cte
        LEFT JOIN RBAC.[User] u1
          ON cte.CreateUserId=u1.Id
        LEFT JOIN RBAC.[User] u2
          ON cte.ModifyUserId=u2.Id
        WHERE cte.Status=1
        ORDER BY LTRIM(orderId)
      ]]>
    </select>

    <!-- 获取用户所属部门 -->
    <select id="GetOwnedDepartments" parameterClass="string" resultClass="string">
      <![CDATA[
        SELECT
          a.Name
        FROM RBAC.Organization a
        INNER JOIN RBAC.StaffOrganize b
          ON a.Id=b.OrganizationId
        WHERE b.UserId=#value#
      ]]>
    </select>

    <!-- 获取用户拥有的角色 -->
    <select id="GetRolesByUser" parameterClass="string" resultClass="Role">
      <![CDATA[
        SELECT
          Name
          ,Remark
        FROM RBAC.Role
        WHERE Id IN(SELECT RoleId FROM RBAC.UserRole WHERE UserId=#value#)
      ]]>
    </select>

    <!-- 获取角色用户 -->
    <select id="GetRoleMembers" parameterClass="string" resultClass="User">
      <![CDATA[
        SELECT
          DISTINCT a.*
        FROM RBAC.[User] a
        INNER JOIN RBAC.UserRole b
          ON a.Id=b.UserId
        WHERE b.RoleId=#value# AND a.Status=1
      ]]>
    </select>

    <!-- 获取未分配角色的用户 -->
    <select id="GetUnAllotRoleUsers" parameterClass="string" resultClass="User">
      <![CDATA[
        SELECT
          a.*
        FROM RBAC.[User] a
        LEFT JOIN RBAC.UserRole b
          ON a.Id=b.UserId AND b.RoleId=#value#
        WHERE b.Id IS NULL AND a.[Status]=1
      ]]>
    </select>
  </statements>
</sqlMap>