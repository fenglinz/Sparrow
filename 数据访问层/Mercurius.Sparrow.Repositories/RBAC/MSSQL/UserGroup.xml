<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mercurius.Sparrow.Repositories.RBAC.UserGroup" xmlns="http://ibatis.apache.org/mapping">
  <alias>
    <typeAlias alias="UserGroup" type="Mercurius.Sparrow.Entities.RBAC.UserGroup, Mercurius.Sparrow.Entities" />
    <typeAlias alias="UserGroupRelation" type="Mercurius.Sparrow.Entities.RBAC.UserGroupRelation, Mercurius.Sparrow.Entities" />
  </alias>

  <statements>

    <!-- 添加或者修改用户组信息 -->
    <update id="CreateOrUpdate" parameterClass="UserGroup">
      <![CDATA[
        IF EXISTS(SELECT * FROM RBAC.UserGroup WHERE Id=#Id#)
          UPDATE RBAC.UserGroup
          SET
            ParentId=#ParentId#,
            Code=#Code#,
            Name=#Name#,
            Sort=#Sort#,
            Remark=#Remark#,
            ModifyUserId=#ModifyUserId#,
            ModifyDateTime=GETDATE()
          WHERE Id=#Id#
        ELSE
          INSERT INTO RBAC.UserGroup
          ( 
            Id,
            ParentId,
            Code,
            Name,
            Sort,
            Remark,
            Status,
            CreateUserId,
            CreateDateTime
          )
          VALUES
          (
            NEWID(),
            #ParentId#,
            #Code#,
            #Name#,
            #Sort#,
            #Remark#,
            1,
            #CreateUserId#,
            GETDATE()
          )
      ]]>
    </update>

    <!-- 删除用户组 -->
    <delete id="Remove" parameterClass="string">
      <![CDATA[
        DELETE FROM [RBAC].[UserGroup] WHERE Id=#value#;
        DELETE FROM [RBAC].[UserGroupRelation] WHERE UserGroupId=#value#;
        DELETE FROM [RBAC].[UserGroupPermission] WHERE UserGroupId=#value#;
      ]]>
    </delete>

    <!-- 添加用户组成员 -->
    <insert id="AddMembers" parameterClass="Params">
      <isNotNull property="UserIds">
        <iterate property="UserIds" open="" close="" conjunction="">
          <![CDATA[
            IF NOT EXISTS(SELECT * FROM RBAC.UserGroupRelation WHERE UserGroupId=#Id# AND UserId=#UserIds[]#)
              INSERT INTO RBAC.UserGroupRelation
              (
                Id,
                UserId,
                UserGroupId,
                CreateUserId,
                CreateDateTime
              )
              VALUES
              (
                NEWID(),
                #UserIds[]#,
                #Id#,
                #CreateUserId#,
                GETDATE()
              )
          ]]>
        </iterate>
      </isNotNull>
    </insert>

    <!-- 删除用户组成员 -->
    <delete id="RemoveMembers" parameterClass="Params">
      <isNotNull property="UserIds">
        <![CDATA[
          DELETE FROM RBAC.UserGroupRelation WHERE UserGroupId=#Id# AND UserId IN
        ]]>
        <iterate property="UserIds" open="(" conjunction="," close=");">
          <![CDATA[#UserIds[]#]]>
        </iterate>
      </isNotNull>
    </delete>

    <!-- 获取用户组信息 -->
    <select id="GetUserGroupById" parameterClass="string" resultClass="UserGroup">
      <![CDATA[
        SELECT
          a.Id
          ,a.ParentId
          ,a.Code
          ,a.Name
          ,a.Sort
          ,a.Remark
          ,a.CreateUserId
          ,u1.Name AS CreateUserName
          ,a.CreateDateTime
          ,a.ModifyUserId
          ,u2.Name AS ModifyUserName
          ,a.ModifyDateTime
        FROM RBAC.UserGroup a
        LEFT JOIN RBAC.[User] u1
          ON a.CreateUserId=u1.Id
        LEFT JOIN RBAC.[User] u2
          ON a.ModifyUserId=u2.Id
        WHERE a.Id=#value#
      ]]>
    </select>

    <!-- 获取用户组信息 -->
    <select id="GetUserGroups" resultClass="UserGroup">
      <![CDATA[
        WITH CTE AS(
	        SELECT
            Id
            ,Name
            ,ParentId
            ,Code
            ,Sort
            ,Remark
            ,CreateUserId
            ,CreateDateTime
            ,ModifyUserId
            ,ModifyDateTime
            ,Status
		        ,ROW_NUMBER() OVER(ORDER BY Sort ASC) AS orderId
	        FROM RBAC.UserGroup
	        WHERE ParentId='0'
	        UNION ALL
          SELECT
            a.Id
            ,a.Name
            ,a.ParentId
            ,a.Code
            ,a.Sort
            ,a.Remark
            ,a.CreateUserId
            ,a.CreateDateTime
            ,a.ModifyUserId
            ,a.ModifyDateTime
            ,a.Status
		        ,cte.orderId*100+(ROW_NUMBER() OVER(ORDER BY a.sort ASC)) as orderId
	        FROM RBAC.UserGroup a
	        INNER JOIN cte
            on a.ParentId=cte.id
        )
        SELECT 
          cte.*,
          u1.Name AS CreateUserName,
          u2.Name AS ModifyUserName
        FROM cte
        LEFT JOIN RBAC.[User] u1
          ON cte.CreateUserId=u1.Id
        LEFT JOIN RBAC.[User] u2
          ON cte.ModifyUserId=u2.Id
        WHERE cte.Status=1
        ORDER BY LTRIM(orderId)
      ]]>
    </select>

    <!-- 获取用户组成员 -->
    <select id="GetMembers" parameterClass="string" resultClass="User">
      <![CDATA[
        SELECT
          u.Id
          ,u.Code
          ,u.Account
          ,u.Name
        FROM RBAC.[User] u
        INNER JOIN RBAC.UserGroupRelation u_r
          ON u.Id=u_r.UserId
        WHERE u_r.UserGroupId=#value#
      ]]>
    </select>

    <!-- 获取未分配到组的用户 -->
    <select id="GetUnAllotUsers" parameterClass="string" resultClass="User">
      <![CDATA[
        SELECT
          u.Id
          ,u.Code
          ,u.Account
          ,u.Name
        FROM RBAC.[User] u
        LEFT JOIN RBAC.UserGroupRelation u_r
          ON u.Id=u_r.UserId AND u_r.UserGroupId=#value#
        WHERE u.Status=1 AND u_r.Id IS NULL
      ]]>
    </select>
  </statements>
</sqlMap>