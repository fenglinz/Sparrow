@using Mercurius.Sparrow.Entities.RBAC
@{
    var systemMenus = this.ViewData["SystemMenus"] as IList<SystemMenu>;
}
@section Styles{
    @Styles.Render("~/Content/tree/css")
    <style type="text/css">
        .icon-container {
            width: 36px;
            height: 30px;
            border: 1px solid #ccc;
            float: left;
            text-align: center;
            margin-right: 4px;
            -ms-border-radius: 4px;
            border-radius: 4px;
        }

            .icon-container #icon {
                font-size: 1.6em;
                padding-top: 1px;
                padding-bottom: 1px;
            }
    </style>
}
@section Scripts{
    @Scripts.Render("~/bundles/tree", "~/bundles/validate")
    <script type="text/javascript">
        $(document).ready(function () {
            $('label.btn').click(function () {
                $('#Category').val($(this).find(':radio').val());
            });
        });

        function onkeyupMenuName(text) {
            $("#Title").val(text);
        }

        // 选取系统图标
        function ChooseImage() {
            var url = '@Url.Action("Icons", "SystemMenu")';

            mercurius.OpenDialog(url, 'Icons', '系统图标-选取', 575, 400, { x: 'right', y: 'bottom', statusbar: false });
        }

        // 设置图标
        function SetImage(img) {
            $("#icon").prop('class', img);
            $("#Image").val(img);
        }

        function OnSave() {
            if (JudgeValidate('#form1')) {
                $('#form1').submit();
            }
        }
    </script>
}
@model SystemMenu
@using (Ajax.BeginForm("CreateOrUpdate", "SystemMenu", null, new AjaxOptions() { HttpMethod = "POST" }, new { @id = "form1", @class = "form-horizontal form", @role = "form" }))
{
    @Html.Hidden("Id", (string)this.ViewBag.Id)
    <div class="form-group form-group-sm">
        <label class="col-sm-2 control-label" for="Name">菜单名称</label>
        <div class="col-sm-10">
            <input id="Name" name="Name" type="text" class="form-control" validate-rule="notNull" validate-field="菜单名称"
                   value="@(Model != null ? Model.Name : string.Empty)" onkeyup="onkeyupMenuName(this.value)" />
        </div>
    </div>
    <div class="form-group form-group-sm">
        <label class="col-sm-2 control-label" for="Title">菜单标记</label>
        <div class="col-sm-10">
            <input id="Title" name="Title" type="text" class="form-control" validate-rule="notNull" validate-field="菜单标记"
                   value="@(Model != null ? Model.Title : string.Empty)" />
        </div>
    </div>
    <div class="form-group form-group-sm">
        <label class="col-sm-2 control-label" for="ParentId">父节点</label>
        <div class="col-sm-10">
            @{
                var tree = systemMenus.AsTree(s => s.ParentId == "0", (p, i) => i.ParentId == p.Id, i => new TreeNode { Id = i.Id, Text = i.Name });
            }
            @TreeHelper.CreateComboTree(tree, "ParentId", this.ViewBag.ParentId, Model == null ? null : Model.Id)
        </div>
    </div>
    <div class="form-group form-group-sm">
        <label class="col-sm-2 control-label">菜单图标</label>
        <div class="col-sm-10">
            @Html.Hidden("Image", Model != null ? Model.Image : string.Empty)
            @{
                var imgUrl = Model != null && Model.Image != null ? Model.Image : string.Empty;
            }
            <div class="icon-container">
                <i id="icon" class="@imgUrl"></i>
            </div>
            <a href="javascript:void(0)" class="btn btn-sm btn-primary" onclick="ChooseImage()">
                <i class="glyphicon glyphicon-picture"></i> 图标选取
            </a>
        </div>
    </div>
    <div class="form-group form-group-sm">
        <label class="col-sm-2 control-label" for="Category">导航菜单</label>
        <div class="col-sm-10">
            <input type="hidden" id="Category" name="Category" value="@((Model==null || !Model.Category.HasValue)?1 :Model.Category)" />
            <div class="btn-group btn-group-sm" data-toggle="buttons">
                <label class="btn btn-sm btn-primary @((Model == null || Model.Category!=2)?"active" :string.Empty)">
                    <input type="radio" autocomplete="off" value="1" /> 显示
                </label>
                <label class="btn btn-sm btn-primary @((Model != null && Model.Category == 2)?"active" :string.Empty)">
                    <input type="radio" autocomplete="off" value="2" /> 不显示
                </label>
            </div>
        </div>
    </div>
    <div class="form-group form-group-sm">
        <label class="col-sm-2 control-label" for="Target">连接目标</label>
        <div class="col-sm-10">
            <select id="Target" name="Target" class="form-control">
                <option value="Iframe" @((Model != null && Model.Target == "Iframe") ? "selected" : string.Empty)>
                    Iframe
                </option>
                <option value="Open" @((Model != null && Model.Target == "Open") ? "selected" : string.Empty)>
                    Open
                </option>
                <option value="href" @((Model != null && Model.Target == "href") ? "selected" : string.Empty)>
                    href
                </option>
            </select>
        </div>
    </div>
    <div class="form-group form-group-sm">
        <label class="col-sm-2 control-label" for="Sort">显示顺序</label>
        <div class="col-sm-10">
            <input class="form-control" id="Sort" name="Sort" type="text" validate-rule="int" validate-field="显示顺序" value="@(Model != null ? Convert.ToString(Model.Sort) : string.Empty)" />
        </div>
    </div>
    <div class="form-group form-group-sm">
        <label class="col-sm-2 control-label" for="NavigateUrl">链接地址</label>
        <div class="col-sm-10">
            @Html.TextAreaFor(m => m.NavigateUrl, new { @class = "form-control", @style = "height: 50px;" })
        </div>
    </div>
}