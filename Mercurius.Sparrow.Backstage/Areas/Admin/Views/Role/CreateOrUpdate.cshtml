@{
    var roles = this.ViewBag.Roles as ResponseSet<Role>;
    var roleTree = roles.Datas.AsTree(r => r.ParentId == "0", (p, r) => r.ParentId == p.Id, r => new TreeNode { Id = r.Id, Text = r.Name });
}

@model Role

@section Styles
{
    @Styles.Render("~/Content/tree/css")
}

@section Scripts
{
    @Scripts.Render("~/bundles/tree", "~/bundles/validate")
    <script type="text/javascript">
        // 获取表单值
        function OnSave() {
            if (JudgeValidate('#frmSave')) {
                $('#frmSave').submit();
            }
        }
    </script>
}

@using (Ajax.BeginForm("CreateOrUpdate", "Role", null, new AjaxOptions { HttpMethod = "POST" }, new { @id = "frmSave", @class = "form-horizontal form", @role = "form" }))
{
    @Html.HiddenFor(m => m.Id)
    @Html.AntiForgeryToken()
    <input type="hidden" id="userIds" name="userIds" />
    <div class="form-group form-group-sm">
        <label class="col-sm-2 control-label" for="Name">角色名称 </label>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @validate_field = "角色名称", @validate_rule = "notNull" })
        </div>
    </div>
    <div class="form-group form-group-sm">
        <label class="col-sm-2 control-label" for="ParentId">所属角色</label>
        <div class="col-sm-9">
            @TreeHelper.CreateComboTree(roleTree, "ParentId", this.ViewBag.ParentId, Model == null ? null : Model.Id)
        </div>
    </div>
    <div class="form-group form-group-sm">
        <label class="col-sm-2 control-label" for="Sort">显示顺序</label>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => m.Sort, new { @class = "form-control", @validate_field = "显示顺序", @validate_rule = "int" })
        </div>
    </div>
    <div class="form-group form-group-sm">
        <label class="col-sm-2 control-label" for="Remark">角色描述</label>
        <div class="col-sm-9">
            @Html.TextAreaFor(m => m.Remark, new { @class = "form-control", @style = "height: 170px;" })
        </div>
    </div>
}
