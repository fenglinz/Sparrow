@model Dictionary

@{
    var categories = this.ViewBag.Categories as ResponseSet<Dictionary>;
    var trees = categories.Datas.AsTree(d => string.IsNullOrWhiteSpace(d.ParentId) || d.ParentId == "0", (p, c) => c.ParentId == p.Id, d => new TreeNode { Id = d.Id, Text = d.Key, Checked = d.Id == this.ViewBag.ParentId });
}

@section Styles
{
    @Styles.Render("~/Content/tree/css")
    <style type="text/css">
        .form-horizontal .radio,
        .form-horizontal .checkbox,
        .form-horizontal .radio-inline,
        .form-horizontal .checkbox-inline {
            padding: 7px 10px 7px 20px;
        }

        input[type="radio"],
        input[type="checkbox"] {
            margin-top: 2.5px;
        }
    </style>
}

@section Scripts{
    @Scripts.Render("~/bundles/validate", "~/bundles/tree")
    <script type="text/javascript">
        $(document).ready(function () {
            parentChange();
            $("#ParentId").bind("change", parentChange);

            $("input[type=text]").blur(function () {
                this.value = $.trim(this.value);
            });
        });

        function OnSave() {
            if (JudgeValidate('#frmSave')) {
                $('#frmSave').submit();
            }
        }
        function parentChange() {
            var selectValue = $("#ParentId :selected").text();

            $("#ParentName").val(selectValue);
        }
    </script>
}
@using (Ajax.BeginForm("CreateOrUpdate", "Dictionary", null, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "onSuccess" }, new { @id = "frmSave", @class = "form-horizontal form", @role = "form" }))
{
    @Html.HiddenFor(m => m.Id)

    @Html.FormGroupFor(Screen.SM).FormPartFor(m => m.ParentId, 2, 9, @<text>
        @TreeHelper.CreateComboTree(trees, item.FullName, Convert.ToString(item.Value))
    </text>, form => form.Label("分类"))
    @Html.FormGroupFor(Screen.SM).TextBoxFor(m => m.Key, 2, 9, f => f.MaxLength(100).Valid(ValidRule.Limit))
    @Html.FormGroupFor(Screen.SM).TextBoxFor(m => m.Value, 2, 9, f => f.MaxLength(100).Valid(ValidRule.Limit))
    @Html.FormGroupFor(Screen.SM).TextBoxFor(m => m.Sort, 2, 9, f => f.Valid(ValidRule.Int))
    @Html.FormGroupFor(Screen.SM).RadiosFor(m => m.Status, 2, 9, f => f.AddItem("启用", 1).AddItem("禁用", 0))
    @Html.FormGroupFor(Screen.SM).TextAreaFor(m => m.Key, 2, 9, f => f.Rows(3))
}
