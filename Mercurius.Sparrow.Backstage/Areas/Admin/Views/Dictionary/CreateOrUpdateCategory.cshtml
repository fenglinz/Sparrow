@model Dictionary

@{
    var categories = this.ViewBag.Categories as ResponseSet<Dictionary>;
    var trees = categories.Datas.AsTree(d => string.IsNullOrWhiteSpace(d.ParentId) || d.ParentId == "0", (p, c) => c.ParentId == p.Id, d => new TreeNode { Id = d.Id, Text = d.Key, Checked = d.Id == this.ViewBag.ParentId });
}

@section Styles{
    @Styles.Render("~/Content/tree/css")
}

@section Scripts{
    @Scripts.Render("~/bundles/validate", "~/bundles/tree")

    <script type="text/javascript">
        function OnSave() {
            if (JudgeValidate('#frmSave')) {
                $('#frmSave').submit();
            }
        }
    </script>
}
@using (Ajax.BeginForm("CreateOrUpdateCategory", "Dictionary", null, new AjaxOptions { HttpMethod = "POST" }, new { @id = "frmSave", @class = "form-horizontal form", @role = "form" }))
{
    @Html.HiddenFor(m => m.Id)
    @Html.FormGroup(Screen.SM).RenderFor(m => m.ParentId, 2, 9, @<text>@TreeHelper.CreateComboTree(trees, item.FullName, Convert.ToString(item.Value), this.ViewBag.Id)</text>, form => form.Caption("父分类"))
    @Html.FormGroup(Screen.SM).TextBoxFor(m => m.Key, 2, 9, ValidRule.Limit, form => form.Caption("分类名").Form(new { @length = "100", @maxlength = "100" }))
    @Html.FormGroup(Screen.SM).TextBoxFor(m => m.Value, 2, 9, ValidRule.LimitOrNull, form => form.Form(new { @length = "100", @maxlength = "100" }))
    @Html.FormGroup(Screen.SM).TextBoxFor(m => m.Sort, 2, 9, ValidRule.Int)
    @Html.FormGroup(Screen.SM).TextAreaFor(m => m.Remark, 2, 9, form => form.Form(new { @style = "height:73px;" }))
}